[
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Jayden‚Äôs Blog ",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nDec 7, 2023\n\n\nJayden Balcarczyk\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nDec 7, 2023\n\n\nJayden Balcarczyk\n\n\n6 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYour Name\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYour Name\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nYOUR NAME\n\n\n0 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jayden Balcarczyk",
    "section": "",
    "text": "Jayden Balcarczyk majors in Business Administration at SUNY Geneseo. When not working on academics, Jayden enjoys spending time playing hockey, spending time with friends and family, and listening to music."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Jayden Balcarczyk",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  Bachelors in Business Administration | Aug 2022 - December 2025  Minor in Marketing"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Jayden Balcarczyk",
    "section": "Experience",
    "text": "Experience\nHammerl Amusments | Operator | May 2021 - present  Rich E. Landscaping | Laborer | June 2023- present"
  },
  {
    "objectID": "posts/starwars/starwars_df.html",
    "href": "posts/starwars/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let‚Äôs analyze the starwars data:"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs.¬†Droid",
    "text": "Human vs.¬†Droid\n\nggplot(data = \n         starwars %>% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Since this post doesn‚Äôt specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "About this project üëè\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nmpg <- ggplot2::mpg\n\n\n\n\n  \n\n\n\nskim(mpg) %>% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n1\n4\n10\n0\n15\n0\n\n\nmodel\n1\n2\n22\n0\n38\n0\n\n\ntrans\n1\n8\n10\n0\n10\n0\n\n\ndrv\n1\n1\n1\n0\n3\n0\n\n\nfl\n1\n1\n1\n0\n5\n0\n\n\nclass\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n‚ñá‚ñÜ‚ñÜ‚ñÉ‚ñÅ\n\n\nyear\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\ncyl\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n‚ñá‚ñÅ‚ñá‚ñÅ‚ñá\n\n\ncty\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n‚ñÜ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nhwy\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n‚ñÖ‚ñÖ‚ñá‚ñÅ‚ñÅ"
  },
  {
    "objectID": "project.html#mpg-and-a-type-of-cars",
    "href": "project.html#mpg-and-a-type-of-cars",
    "title": "DANL Project",
    "section": "2.2 MPG and a Type of Cars",
    "text": "2.2 MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) üöô üöö üöê.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html",
    "href": "posts/Restaurant/Restaurant.html",
    "title": "Restaurant",
    "section": "",
    "text": "Let‚Äôs analyze the starwars data:\nRestaurants &lt;- read_csv(\"https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv\")"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#variable-description-for-starwars-data.frame",
    "href": "posts/Restaurant/Restaurant.html#variable-description-for-starwars-data.frame",
    "title": "Restaurant",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nCAMIS This is an unique identifier for the entity (restaurant); 10-digit integer\nBORO Borough in which the entity (restaurant) is located.; ‚Ä¢ 1 = MANHATTAN ‚Ä¢ 2 = BRONX ‚Ä¢ 3 = BROOKLYN ‚Ä¢ 4 = QUEENS ‚Ä¢ 5 = STATEN ISLAND ‚Ä¢ 0 = Missing;\nCUISINE DESCRIPTION This field describes the entity (restaurant) cuisine.\nACTION This field represents the actions that is associated with each restaurant inspection. ; ‚Ä¢ Violations were cited in the following area(s). ‚Ä¢ No violations were recorded at the time of this inspection. ‚Ä¢ Establishment re-opened by DOHMH ‚Ä¢ Establishment re-closed by DOHMH ‚Ä¢ Establishment Closed by DOHMH. ‚Ä¢ Violations were cited in the following area(s) and those requiring immediate action were addressed.\nVIOLATION CODE Violation code associated with an establishment (restaurant) inspection\nVIOLATION DESCRIPTION Violation description associated with an establishment (restaurant) inspection\nCRITICAL FLAG Indicator of critical violation; ‚Ä¢ Critical ‚Ä¢ Not Critical ‚Ä¢ Not Applicable; Critical violations are those most likely to contribute to food-borne illness\nSCORE Total score for a particular inspection;\nGRADE Grade associated with the inspection; ‚Ä¢ N = Not Yet Graded ‚Ä¢ A = Grade A ‚Ä¢ B = Grade B ‚Ä¢ C = Grade C ‚Ä¢ Z = Grade Pending ‚Ä¢ P = Grade Pending issued on re-opening following an initial inspection that resulted in a closure"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#mean-standard-deviation-first-quartile-median-thrid-quartile-and-max-of-score-for-each-gradeof-restaurants",
    "href": "posts/Restaurant/Restaurant.html#mean-standard-deviation-first-quartile-median-thrid-quartile-and-max-of-score-for-each-gradeof-restaurants",
    "title": "Restaurant",
    "section": "Mean, Standard Deviation, First Quartile, Median, Thrid Quartile, and Max of Score for each GRADEof restaurants",
    "text": "Mean, Standard Deviation, First Quartile, Median, Thrid Quartile, and Max of Score for each GRADEof restaurants\n\nRestaurants %&gt;% group_by(GRADE) %&gt;% skim(SCORE) %&gt;% select(-n_missing)\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n17633\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nGRADE\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nGRADE\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nSCORE\nA\n1\n9.26\n3.42\n0\n7\n10\n12\n13\n‚ñÅ‚ñÇ‚ñÇ‚ñÖ‚ñá\n\n\nSCORE\nB\n1\n21.03\n4.16\n0\n18\n21\n24\n36\n‚ñÅ‚ñÅ‚ñá‚ñá‚ñÅ\n\n\nSCORE\nC\n1\n38.56\n10.83\n0\n31\n36\n44\n86\n‚ñÅ‚ñá‚ñá‚ñÇ‚ñÅ"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#number-of-restaurants-with-an-a-grade-in-nyc",
    "href": "posts/Restaurant/Restaurant.html#number-of-restaurants-with-an-a-grade-in-nyc",
    "title": "Restaurant",
    "section": "Number of restaurants with an A Grade in NYC",
    "text": "Number of restaurants with an A Grade in NYC"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#the-percentage-of-restaurants-in-nyc-with-a-c-grade",
    "href": "posts/Restaurant/Restaurant.html#the-percentage-of-restaurants-in-nyc-with-a-c-grade",
    "title": "Restaurant",
    "section": "The percentage of restaurants in NYC with a C Grade",
    "text": "The percentage of restaurants in NYC with a C Grade\n\nfreq &lt;- as.data.frame( table(Restaurants$GRADE) )\nprop &lt;- as.data.frame( 100 * prop.table(table(Restaurants$GRADE)) )"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#histograms",
    "href": "posts/Restaurant/Restaurant.html#histograms",
    "title": "Restaurant",
    "section": "Histograms",
    "text": "Histograms\n\nggplot(Restaurants) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_grid( `CRITICAL FLAG` ~ GRADE )"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#histograms-with-varying-x--scale-across-facets",
    "href": "posts/Restaurant/Restaurant.html#histograms-with-varying-x--scale-across-facets",
    "title": "Restaurant",
    "section": "Histograms with varying x- scale across facets",
    "text": "Histograms with varying x- scale across facets\n\nggplot(Restaurants) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_grid( `CRITICAL FLAG` ~ GRADE, scales = 'free_x' )"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#most-common-cuisine-description-values-and-the-cuisine-description-value-that-has-the-highest-proportion-of-grade-a",
    "href": "posts/Restaurant/Restaurant.html#most-common-cuisine-description-values-and-the-cuisine-description-value-that-has-the-highest-proportion-of-grade-a",
    "title": "Restaurant",
    "section": "10 most common Cuisine Description values and the Cuisine Description value that has the highest proportion of Grade A",
    "text": "10 most common Cuisine Description values and the Cuisine Description value that has the highest proportion of Grade A\n\nq2e &lt;- Restaurants %&gt;% \n  group_by(`CUISINE DESCRIPTION`) %&gt;% \n  mutate(n = n()) %&gt;% \n  ungroup() %&gt;% \n  filter(dense_rank(-n) &lt;= 10) %&gt;% \n  group_by(`CUISINE DESCRIPTION`, GRADE) %&gt;% \n  count() %&gt;% \n  group_by(`CUISINE DESCRIPTION`) %&gt;% \n  mutate(prop_A = n / sum(n)) %&gt;% \n  filter(GRADE == 'A') %&gt;% \n  arrange(-prop_A)"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#most-common-names-of-restaurants-in-each-boro-and-the-most-common-dba-value-in-nyc",
    "href": "posts/Restaurant/Restaurant.html#most-common-names-of-restaurants-in-each-boro-and-the-most-common-dba-value-in-nyc",
    "title": "Restaurant",
    "section": "3 most common names of restaurants in each Boro and the most common DBA value in NYC",
    "text": "3 most common names of restaurants in each Boro and the most common DBA value in NYC\n\nq2f &lt;- Restaurants %&gt;% \n  select(DBA, BORO) %&gt;% \n  group_by(BORO, DBA) %&gt;% \n  summarize(n = n()) %&gt;% \n  mutate(ranking = dense_rank(-n)) %&gt;% \n  filter(ranking &lt;= 3) %&gt;% \n  arrange(BORO, ranking)\n\nq2f_ &lt;- Restaurants %&gt;% \n  group_by(DBA) %&gt;% \n  count() %&gt;% \n  arrange(-n)"
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html",
    "href": "posts/NFL 2022/NFL 2022.html",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Let‚Äôs analyze the NFL2022_stuffs data:\nNFL2022_stuffs &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')"
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#variable-description-for-starwars-data.frame",
    "href": "posts/NFL 2022/NFL 2022.html#variable-description-for-starwars-data.frame",
    "title": "NFL in 2022 (HW #5)",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nplay_id Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id Ten digit identifier for NFL game\ndrive Numeric drive number in the game\nweek Season week\nposteam String abbreviation for the team with possession.\nqtr Quarter of the game (5 is overtime).\nhalf_seconds_remaining Numeric seconds remaining in the half.\ndown The down for the given play. Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). If you make 10 yards then you get another set of four downs.\npass Binary indicator if the play was a pass play.\nwp Estimated winning probability for the posteam given the current situation at the start of the given play."
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#q2a",
    "href": "posts/NFL 2022/NFL 2022.html#q2a",
    "title": "NFL in 2022 (HW #5)",
    "section": "Q2a",
    "text": "Q2a\n\nIn data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\n\nNFL2022_stuffs_filtered &lt;- NFL2022_stuffs %&gt;% filter(!is.na(posteam))\n\nprint(NFL2022_stuffs_filtered)\n\n# A tibble: 46,427 √ó 10\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n 1      43 2022_01‚Ä¶     1     1 NYJ         1    NA                   1800     0\n 2      68 2022_01‚Ä¶     1     1 NYJ         1     1                   1796     0\n 3      89 2022_01‚Ä¶     1     1 NYJ         1     1                   1769     1\n 4     115 2022_01‚Ä¶     1     1 NYJ         1     2                   1765     0\n 5     136 2022_01‚Ä¶     1     1 NYJ         1     3                   1741     1\n 6     172 2022_01‚Ä¶     1     1 NYJ         1     4                   1733     0\n 7     202 2022_01‚Ä¶     2     1 BAL         1     1                   1722     1\n 8     230 2022_01‚Ä¶     2     1 BAL         1     2                   1701     1\n 9     254 2022_01‚Ä¶     2     1 BAL         1     3                   1661     0\n10     275 2022_01‚Ä¶     2     1 BAL         1     1                   1621     0\n# ‚Ñπ 46,417 more rows\n# ‚Ñπ 1 more variable: wp &lt;dbl&gt;"
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#q2b.",
    "href": "posts/NFL 2022/NFL 2022.html#q2b.",
    "title": "NFL in 2022 (HW #5)",
    "section": "Q2b.",
    "text": "Q2b.\n\nSummarize the mean value of pass for each posteam when all the following conditions hold:\n\nwp is greater than 20% and less than 75%;\ndown is less than or equal to 2; and\nhalf_seconds_remaining is greater than 120.\n\n\n\nfiltered_data &lt;- NFL2022_stuffs %&gt;%\n  filter(\n    wp &gt; 0.20 & wp &lt; 0.75,\n    down &lt;= 2,\n    half_seconds_remaining &gt; 120\n  )\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(posteam) %&gt;%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nprint(summary_data)\n\n# A tibble: 32 √ó 2\n   posteam mean_pass\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ‚Ñπ 22 more rows"
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#variable-description-for-nfl-data.frame",
    "href": "posts/NFL 2022/NFL 2022.html#variable-description-for-nfl-data.frame",
    "title": "NFL in 2022 (HW #5)",
    "section": "Variable Description for NFL data.frame",
    "text": "Variable Description for NFL data.frame\nThe following describes the variables in the starwars data.frame.\n\nplay_id Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id Ten digit identifier for NFL game\ndrive Numeric drive number in the game\nweek Season week\nposteam String abbreviation for the team with possession.\nqtr Quarter of the game (5 is overtime).\nhalf_seconds_remaining Numeric seconds remaining in the half.\ndown The down for the given play. Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). If you make 10 yards then you get another set of four downs.\npass Binary indicator if the play was a pass play.\nwp Estimated winning probability for the posteam given the current situation at the start of the given play."
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#q2c.",
    "href": "posts/NFL 2022/NFL 2022.html#q2c.",
    "title": "NFL in 2022 (HW #5)",
    "section": "Q2c.",
    "text": "Q2c.\n\nProvide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.\n\nIn the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n\n\nfiltered_data &lt;- NFL2022_stuffs %&gt;%\n  filter(\n    wp &gt; 0.20 & wp &lt; 0.75,\n    down &lt;= 2,\n    half_seconds_remaining &gt; 120\n  )\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(posteam) %&gt;%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nsummary_data &lt;- summary_data %&gt;%\n  arrange(mean_pass)\nggplot(summary_data, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +\n  geom_point() +\n  labs(title = \"Mean Value of pass for Each posteam\",\n       x = \"Percentage of pass plays\",\n       y = \"Team with possession\") +\n  theme_minimal()"
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#variable-description-for-nfl2022_stuffs-data.frame",
    "href": "posts/NFL 2022/NFL 2022.html#variable-description-for-nfl2022_stuffs-data.frame",
    "title": "NFL in 2022 (HW #5)",
    "section": "Variable Description for NFL2022_stuffs data.frame",
    "text": "Variable Description for NFL2022_stuffs data.frame\nThe following describes the variables in the NFL2022_stuffs data.frame.\n\nplay_id Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id Ten digit identifier for NFL game\ndrive Numeric drive number in the game\nweek Season week\nposteam String abbreviation for the team with possession.\nqtr Quarter of the game (5 is overtime).\nhalf_seconds_remaining Numeric seconds remaining in the half.\ndown The down for the given play. Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). If you make 10 yards then you get another set of four downs.\npass Binary indicator if the play was a pass play.\nwp Estimated winning probability for the posteam given the current situation at the start of the given play."
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#q2d.",
    "href": "posts/NFL 2022/NFL 2022.html#q2d.",
    "title": "NFL in 2022 (HW #5)",
    "section": "Q2d.",
    "text": "Q2d.\n\nConsider the following data.frame, NFL2022_epa:\n\n\nNFL2022_epa &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\nrmarkdown::paged_table(NFL2022_epa) \n\n\n\n  \n\n\n\nVariable description for NFL2022_epa\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game. drive: Numeric drive number in the game.\nposteam: String abbreviation for the team with possession. passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\nreceiver: Name of the receiver.\nepa: Expected points added (EPA) by the posteam for the given play.\n\nCreate the data.frame, NFL2022_stuffs_EPA, that includes\n\nAll the variables in the data.frame, NFL2022_stuffs;\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\n\nNFL2022_stuffs_EPA &lt;- left_join(NFL2022_stuffs, NFL2022_epa %&gt;% select(game_id, passer, receiver, epa), by = \"game_id\")\nNFL2022_stuffs_EPA &lt;- NFL2022_stuffs_EPA %&gt;% filter(!is.na(passer))\nprint(NFL2022_stuffs_EPA)\n\n# A tibble: 3,997,285 √ó 13\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n 1       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 2       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 3       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 4       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 5       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 6       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 7       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 8       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 9       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n10       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n# ‚Ñπ 3,997,275 more rows\n# ‚Ñπ 4 more variables: wp &lt;dbl&gt;, passer &lt;chr&gt;, receiver &lt;chr&gt;, epa &lt;dbl&gt;"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html",
    "href": "posts/NFL 2022/NFL2022.html",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Let‚Äôs analyze the NFL2022_stuffs data:\n\nNFL2022_stuffs <- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n\nrmarkdown::paged_table(NFL2022_stuffs) \n\n\n\n  \n\n\n\n\nThe following describes the variables in the NFL2022_stuffs data.frame.\n\nplay_id Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id Ten digit identifier for NFL game\ndrive Numeric drive number in the game\nweek Season week\nposteam String abbreviation for the team with possession.\nqtr Quarter of the game (5 is overtime).\nhalf_seconds_remaining Numeric seconds remaining in the half.\ndown The down for the given play. Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). If you make 10 yards then you get another set of four downs.\npass Binary indicator if the play was a pass play.\nwp Estimated winning probability for the posteam given the current situation at the start of the given play.\n\n\n\n\n\nIn data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\n\nNFL2022_stuffs_filtered <- NFL2022_stuffs %>% filter(!is.na(posteam))\n\nprint(NFL2022_stuffs_filtered)\n\n# A tibble: 46,427 √ó 10\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     <dbl> <chr>    <dbl> <dbl> <chr>   <dbl> <dbl>                  <dbl> <dbl>\n 1      43 2022_01‚Ä¶     1     1 NYJ         1    NA                   1800     0\n 2      68 2022_01‚Ä¶     1     1 NYJ         1     1                   1796     0\n 3      89 2022_01‚Ä¶     1     1 NYJ         1     1                   1769     1\n 4     115 2022_01‚Ä¶     1     1 NYJ         1     2                   1765     0\n 5     136 2022_01‚Ä¶     1     1 NYJ         1     3                   1741     1\n 6     172 2022_01‚Ä¶     1     1 NYJ         1     4                   1733     0\n 7     202 2022_01‚Ä¶     2     1 BAL         1     1                   1722     1\n 8     230 2022_01‚Ä¶     2     1 BAL         1     2                   1701     1\n 9     254 2022_01‚Ä¶     2     1 BAL         1     3                   1661     0\n10     275 2022_01‚Ä¶     2     1 BAL         1     1                   1621     0\n# ‚Ñπ 46,417 more rows\n# ‚Ñπ 1 more variable: wp <dbl>\n\n\n\n\n\n\nSummarize the mean value of pass for each posteam when all the following conditions hold:\n\nwp is greater than 20% and less than 75%;\ndown is less than or equal to 2; and\nhalf_seconds_remaining is greater than 120.\n\n\n\nfiltered_data <- NFL2022_stuffs %>%\n  filter(\n    wp > 0.20 & wp < 0.75,\n    down <= 2,\n    half_seconds_remaining > 120\n  )\nsummary_data <- filtered_data %>%\n  group_by(posteam) %>%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nprint(summary_data)\n\n# A tibble: 32 √ó 2\n   posteam mean_pass\n   <chr>       <dbl>\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ‚Ñπ 22 more rows\n\n\n\n\n\n\nProvide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.\n\nIn the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n\n\nfiltered_data <- NFL2022_stuffs %>%\n  filter(\n    wp > 0.20 & wp < 0.75,\n    down <= 2,\n    half_seconds_remaining > 120\n  )\nsummary_data <- filtered_data %>%\n  group_by(posteam) %>%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nsummary_data <- summary_data %>%\n  arrange(mean_pass)\nggplot(summary_data, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +\n  geom_point() +\n  labs(title = \"Mean Value of pass for Each posteam\",\n       x = \"Percentage of pass plays\",\n       y = \"Team with possession\") +\n  theme_minimal()\n\n\n\n\n\nComment\n\nEvery NFL team falls somewhere within the .45 to .55 range. Washington runs the lowest percentage of pass plays while Cincinnati runs the highest percentage.\n\n\n\n\n\n\nConsider the following data.frame, NFL2022_epa:\n\n\nNFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\nrmarkdown::paged_table(NFL2022_epa) \n\n\n\n  \n\n\n\nVariable description for NFL2022_epa\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game. drive: Numeric drive number in the game.\nposteam: String abbreviation for the team with possession. passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\nreceiver: Name of the receiver.\nepa: Expected points added (EPA) by the posteam for the given play.\n\nCreate the data.frame, NFL2022_stuffs_EPA, that includes\n\nAll the variables in the data.frame, NFL2022_stuffs;\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\n\nNFL2022_stuffs_EPA <- left_join(NFL2022_stuffs, NFL2022_epa %>% select(game_id, passer, receiver, epa), by = \"game_id\")\nNFL2022_stuffs_EPA <- NFL2022_stuffs_EPA %>% filter(!is.na(passer))\nprint(NFL2022_stuffs_EPA)\n\n# A tibble: 3,997,285 √ó 13\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     <dbl> <chr>    <dbl> <dbl> <chr>   <dbl> <dbl>                  <dbl> <dbl>\n 1       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 2       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 3       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 4       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 5       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 6       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 7       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 8       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 9       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n10       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n# ‚Ñπ 3,997,275 more rows\n# ‚Ñπ 4 more variables: wp <dbl>, passer <chr>, receiver <chr>, epa <dbl>\n\n\n\n\n\n\nProvide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,\n\n\"J.Allen\"\n\"P.Mahomes\"\n\n\n\nselected_passers <- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data <- NFL2022_stuffs_EPA %>%\n  filter(passer %in% selected_passers)\nfiltered_data <- filtered_data %>%\n  mutate(week_group = cut(as.numeric(week), breaks = seq(1, max(as.numeric(week)) + 5, by = 5), include.lowest = TRUE))\nfiltered_data$week_group <- factor(filtered_data$week_group, levels = unique(filtered_data$week_group))\nmean_epa_by_week <- filtered_data %>%\n  group_by(passer, week) %>%\n  summarize(mean_epa = mean(epa, na.rm = TRUE))\nggplot(mean_epa_by_week, aes(x = week, y = mean_epa, group = passer, color = passer)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Mean EPA Comparison for J.Allen and P.Mahomes\",\n       x = \"Week\",\n       y = \"Mean EPA\",\n       color = \"Passer\") +\n  theme_minimal()\n\n\n\n\n\nComment\n\n‚ÄòJ. Allen‚Äô and ‚ÄòP. Mahomes‚Äô exhibit distinct patterns, and the graph provides a clear comparison of their respective performances over the weeks, highlighting any notable differences or similarities in mean EPA values.‚Äù\n\n\n\n\n\n\nCalculate the difference between the mean value of epa for \"J.Allen\" the mean value of epa for \"P.Mahomes\" for each value of week.\n\n\nselected_passers <- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data <- NFL2022_stuffs_EPA %>%\n  filter(passer %in% selected_passers)\nmean_epa_by_passer_and_week <- filtered_data %>%\n  group_by(passer, week) %>%\n  summarize(mean_epa = mean(epa, na.rm = TRUE))\nwide_data <- mean_epa_by_passer_and_week %>%\n  pivot_wider(names_from = passer, values_from = mean_epa)\nwide_data <- wide_data %>%\n  mutate(epa_difference = `J.Allen` - `P.Mahomes`)\nprint(wide_data)\n\n# A tibble: 22 √ó 4\n    week J.Allen P.Mahomes epa_difference\n   <dbl>   <dbl>     <dbl>          <dbl>\n 1     1   0.530    0.698         -0.169 \n 2     2   0.487    0.148          0.339 \n 3     3   0.169    0.246         -0.0763\n 4     4   0.191    0.271         -0.0803\n 5     5   0.627    0.302          0.325 \n 6     6   0.307    0.133          0.173 \n 7     8   0.224   NA             NA     \n 8     9  -0.208    0.0965        -0.304 \n 9    10   0.161    0.589         -0.429 \n10    11   0.192    0.365         -0.173 \n# ‚Ñπ 12 more rows\n\n\n\n\n\n\nSummarize the resulting data.frame in Q2d, with the following four variables:\n\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\nmean_epa: Mean value of epa in 2022 for each passer\nn_pass: Number of observations for each passer\n\nThen find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\n\nsummary_data <- NFL2022_stuffs_EPA %>%\n  group_by(posteam, passer) %>%\n  summarize(\n    mean_epa = mean(epa, na.rm = TRUE),\n    n_pass = n(),\n    .groups = 'drop'\n  )\nquantile_threshold <- quantile(summary_data$n_pass, 0.75)\ntop_passers <- summary_data %>%\n  filter(n_pass >= quantile_threshold) %>%\n  top_n(10, mean_epa)\nprint(top_passers)\n\n# A tibble: 10 √ó 4\n   posteam passer      mean_epa n_pass\n   <chr>   <chr>          <dbl>  <int>\n 1 BUF     J.Brissett     0.442   4160\n 2 CAR     J.Goff         0.359   4400\n 3 CHI     J.Goff         0.475   4711\n 4 CHI     K.Cousins      0.479   4198\n 5 IND     T.Lawrence     0.324   4961\n 6 JAX     P.Mahomes      0.455   5862\n 7 LA      J.Garoppolo    0.460   4452\n 8 MIN     J.Goff         0.289   7105\n 9 SEA     B.Purdy        0.477   5351\n10 TEN     T.Lawrence     0.296   6798"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#variable-description-for-nfl2022_stuffs-data.frame",
    "href": "posts/NFL 2022/NFL2022.html#variable-description-for-nfl2022_stuffs-data.frame",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "The following describes the variables in the NFL2022_stuffs data.frame.\n\nplay_id Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id Ten digit identifier for NFL game\ndrive Numeric drive number in the game\nweek Season week\nposteam String abbreviation for the team with possession.\nqtr Quarter of the game (5 is overtime).\nhalf_seconds_remaining Numeric seconds remaining in the half.\ndown The down for the given play. Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). If you make 10 yards then you get another set of four downs.\npass Binary indicator if the play was a pass play.\nwp Estimated winning probability for the posteam given the current situation at the start of the given play."
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2a",
    "href": "posts/NFL 2022/NFL2022.html#q2a",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "In data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\n\nNFL2022_stuffs_filtered &lt;- NFL2022_stuffs %&gt;% filter(!is.na(posteam))\n\nprint(NFL2022_stuffs_filtered)\n\n# A tibble: 46,427 √ó 10\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n 1      43 2022_01‚Ä¶     1     1 NYJ         1    NA                   1800     0\n 2      68 2022_01‚Ä¶     1     1 NYJ         1     1                   1796     0\n 3      89 2022_01‚Ä¶     1     1 NYJ         1     1                   1769     1\n 4     115 2022_01‚Ä¶     1     1 NYJ         1     2                   1765     0\n 5     136 2022_01‚Ä¶     1     1 NYJ         1     3                   1741     1\n 6     172 2022_01‚Ä¶     1     1 NYJ         1     4                   1733     0\n 7     202 2022_01‚Ä¶     2     1 BAL         1     1                   1722     1\n 8     230 2022_01‚Ä¶     2     1 BAL         1     2                   1701     1\n 9     254 2022_01‚Ä¶     2     1 BAL         1     3                   1661     0\n10     275 2022_01‚Ä¶     2     1 BAL         1     1                   1621     0\n# ‚Ñπ 46,417 more rows\n# ‚Ñπ 1 more variable: wp &lt;dbl&gt;"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2b.",
    "href": "posts/NFL 2022/NFL2022.html#q2b.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Summarize the mean value of pass for each posteam when all the following conditions hold:\n\nwp is greater than 20% and less than 75%;\ndown is less than or equal to 2; and\nhalf_seconds_remaining is greater than 120.\n\n\n\nfiltered_data &lt;- NFL2022_stuffs %&gt;%\n  filter(\n    wp &gt; 0.20 & wp &lt; 0.75,\n    down &lt;= 2,\n    half_seconds_remaining &gt; 120\n  )\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(posteam) %&gt;%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nprint(summary_data)\n\n# A tibble: 32 √ó 2\n   posteam mean_pass\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ‚Ñπ 22 more rows"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2c.",
    "href": "posts/NFL 2022/NFL2022.html#q2c.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Provide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.\n\nIn the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n\n\nfiltered_data &lt;- NFL2022_stuffs %&gt;%\n  filter(\n    wp &gt; 0.20 & wp &lt; 0.75,\n    down &lt;= 2,\n    half_seconds_remaining &gt; 120\n  )\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(posteam) %&gt;%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nsummary_data &lt;- summary_data %&gt;%\n  arrange(mean_pass)\nggplot(summary_data, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +\n  geom_point() +\n  labs(title = \"Mean Value of pass for Each posteam\",\n       x = \"Percentage of pass plays\",\n       y = \"Team with possession\") +\n  theme_minimal()\n\n\n\n\n\nComment\n\nEvery NFL team falls somewhere within the .45 to .55 range. Washington runs the lowest percentage of pass plays while Cincinnati runs the highest percentage."
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2d.",
    "href": "posts/NFL 2022/NFL2022.html#q2d.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Consider the following data.frame, NFL2022_epa:\n\n\nNFL2022_epa &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\nrmarkdown::paged_table(NFL2022_epa) \n\n\n\n  \n\n\n\nVariable description for NFL2022_epa\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game. drive: Numeric drive number in the game.\nposteam: String abbreviation for the team with possession. passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\nreceiver: Name of the receiver.\nepa: Expected points added (EPA) by the posteam for the given play.\n\nCreate the data.frame, NFL2022_stuffs_EPA, that includes\n\nAll the variables in the data.frame, NFL2022_stuffs;\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\n\nNFL2022_stuffs_EPA &lt;- left_join(NFL2022_stuffs, NFL2022_epa %&gt;% select(game_id, passer, receiver, epa), by = \"game_id\")\nNFL2022_stuffs_EPA &lt;- NFL2022_stuffs_EPA %&gt;% filter(!is.na(passer))\nprint(NFL2022_stuffs_EPA)\n\n# A tibble: 3,997,285 √ó 13\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n 1       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 2       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 3       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 4       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 5       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 6       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 7       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 8       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 9       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n10       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n# ‚Ñπ 3,997,275 more rows\n# ‚Ñπ 4 more variables: wp &lt;dbl&gt;, passer &lt;chr&gt;, receiver &lt;chr&gt;, epa &lt;dbl&gt;"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2e.",
    "href": "posts/NFL 2022/NFL2022.html#q2e.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Provide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,\n\n\"J.Allen\"\n\"P.Mahomes\"\n\n\n\nselected_passers &lt;- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data &lt;- NFL2022_stuffs_EPA %&gt;%\n  filter(passer %in% selected_passers)\nfiltered_data &lt;- filtered_data %&gt;%\n  mutate(week_group = cut(as.numeric(week), breaks = seq(1, max(as.numeric(week)) + 5, by = 5), include.lowest = TRUE))\nfiltered_data$week_group &lt;- factor(filtered_data$week_group, levels = unique(filtered_data$week_group))\nmean_epa_by_week &lt;- filtered_data %&gt;%\n  group_by(passer, week) %&gt;%\n  summarize(mean_epa = mean(epa, na.rm = TRUE))\nggplot(mean_epa_by_week, aes(x = week, y = mean_epa, group = passer, color = passer)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Mean EPA Comparison for J.Allen and P.Mahomes\",\n       x = \"Week\",\n       y = \"Mean EPA\",\n       color = \"Passer\") +\n  theme_minimal()\n\n\n\n\n\nComment\n\n‚ÄòJ. Allen‚Äô and ‚ÄòP. Mahomes‚Äô exhibit distinct patterns, and the graph provides a clear comparison of their respective performances over the weeks, highlighting any notable differences or similarities in mean EPA values.‚Äù"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2f.",
    "href": "posts/NFL 2022/NFL2022.html#q2f.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Calculate the difference between the mean value of epa for \"J.Allen\" the mean value of epa for \"P.Mahomes\" for each value of week.\n\n\nselected_passers &lt;- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data &lt;- NFL2022_stuffs_EPA %&gt;%\n  filter(passer %in% selected_passers)\nmean_epa_by_passer_and_week &lt;- filtered_data %&gt;%\n  group_by(passer, week) %&gt;%\n  summarize(mean_epa = mean(epa, na.rm = TRUE))\nwide_data &lt;- mean_epa_by_passer_and_week %&gt;%\n  pivot_wider(names_from = passer, values_from = mean_epa)\nwide_data &lt;- wide_data %&gt;%\n  mutate(epa_difference = `J.Allen` - `P.Mahomes`)\nprint(wide_data)\n\n# A tibble: 22 √ó 4\n    week J.Allen P.Mahomes epa_difference\n   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;          &lt;dbl&gt;\n 1     1   0.530    0.698         -0.169 \n 2     2   0.487    0.148          0.339 \n 3     3   0.169    0.246         -0.0763\n 4     4   0.191    0.271         -0.0803\n 5     5   0.627    0.302          0.325 \n 6     6   0.307    0.133          0.173 \n 7     8   0.224   NA             NA     \n 8     9  -0.208    0.0965        -0.304 \n 9    10   0.161    0.589         -0.429 \n10    11   0.192    0.365         -0.173 \n# ‚Ñπ 12 more rows"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2g.",
    "href": "posts/NFL 2022/NFL2022.html#q2g.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Summarize the resulting data.frame in Q2d, with the following four variables:\n\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\nmean_epa: Mean value of epa in 2022 for each passer\nn_pass: Number of observations for each passer\n\nThen find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\n\nsummary_data &lt;- NFL2022_stuffs_EPA %&gt;%\n  group_by(posteam, passer) %&gt;%\n  summarize(\n    mean_epa = mean(epa, na.rm = TRUE),\n    n_pass = n(),\n    .groups = 'drop'\n  )\nquantile_threshold &lt;- quantile(summary_data$n_pass, 0.75)\ntop_passers &lt;- summary_data %&gt;%\n  filter(n_pass &gt;= quantile_threshold) %&gt;%\n  top_n(10, mean_epa)\nprint(top_passers)\n\n# A tibble: 10 √ó 4\n   posteam passer      mean_epa n_pass\n   &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;  &lt;int&gt;\n 1 BUF     J.Brissett     0.442   4160\n 2 CAR     J.Goff         0.359   4400\n 3 CHI     J.Goff         0.475   4711\n 4 CHI     K.Cousins      0.479   4198\n 5 IND     T.Lawrence     0.324   4961\n 6 JAX     P.Mahomes      0.455   5862\n 7 LA      J.Garoppolo    0.460   4452\n 8 MIN     J.Goff         0.289   7105\n 9 SEA     B.Purdy        0.477   5351\n10 TEN     T.Lawrence     0.296   6798"
  },
  {
    "objectID": "posts/Beer Markets/blog-1.html",
    "href": "posts/Beer Markets/blog-1.html",
    "title": "Starwars",
    "section": "",
    "text": "Let‚Äôs analyze the starwars data:"
  },
  {
    "objectID": "posts/Beer Markets/blog-1.html#variable-description-for-starwars-data.frame",
    "href": "posts/Beer Markets/blog-1.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/Beer Markets/blog-1.html#human-vs.-droid",
    "href": "posts/Beer Markets/blog-1.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs.¬†Droid",
    "text": "Human vs.¬†Droid\n\nggplot(data = \n         starwars %>% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/Spotify/Spotify.html",
    "href": "posts/Spotify/Spotify.html",
    "title": "Starwars",
    "section": "",
    "text": "Let‚Äôs analyze the starwars data:"
  },
  {
    "objectID": "posts/Spotify/Spotify.html#variable-description-for-starwars-data.frame",
    "href": "posts/Spotify/Spotify.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/Spotify/Spotify.html#human-vs.-droid",
    "href": "posts/Spotify/Spotify.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs.¬†Droid",
    "text": "Human vs.¬†Droid\n\nggplot(data = \n         starwars %>% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  }
]