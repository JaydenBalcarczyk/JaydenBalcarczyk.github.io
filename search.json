[
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Jayden‚Äôs Blog ",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nDec 8, 2023\n\n\nJayden Balcarczyk\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nDec 8, 2023\n\n\nJayden Balcarczyk\n\n\n5 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nDec 7, 2023\n\n\nJayden Balcarczyk\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nDec 7, 2023\n\n\nJayden Balcarczyk\n\n\n7 min\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nYOUR NAME\n\n\n0 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jayden Balcarczyk",
    "section": "",
    "text": "Jayden Balcarczyk majors in Business Administration at SUNY Geneseo. When not working on academics, Jayden enjoys spending time playing hockey, spending time with friends and family, and listening to music."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Jayden Balcarczyk",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  Bachelors in Business Administration | Aug 2022 - December 2025  Minor in Marketing"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Jayden Balcarczyk",
    "section": "Experience",
    "text": "Experience\nHammerl Amusments | Operator | May 2021 - present  Rich E. Landscaping | Laborer | June 2023- present"
  },
  {
    "objectID": "posts/starwars/starwars_df.html",
    "href": "posts/starwars/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let‚Äôs analyze the starwars data:"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs.¬†Droid",
    "text": "Human vs.¬†Droid\n\nggplot(data = \n         starwars %>% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Since this post doesn‚Äôt specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "About this project üëè\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nrestaurant <- read_csv('https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv')\n\n\n\n\n  \n\n\n\nskim(restaurant) %>% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nrestaurant\n\n\nNumber of rows\n17633\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n10\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nDBA\n1\n1\n75\n0\n13914\n0\n\n\nBORO\n1\n5\n13\n0\n5\n0\n\n\nSTREET\n1\n5\n40\n0\n2038\n0\n\n\nCUISINE DESCRIPTION\n1\n4\n30\n0\n87\n0\n\n\nINSPECTION DATE\n1\n10\n10\n0\n751\n0\n\n\nACTION\n1\n33\n47\n0\n2\n0\n\n\nVIOLATION CODE\n1\n3\n5\n0\n60\n0\n\n\nVIOLATION DESCRIPTION\n1\n19\n940\n0\n101\n0\n\n\nCRITICAL FLAG\n1\n8\n12\n0\n2\n0\n\n\nGRADE\n1\n1\n1\n0\n3\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nCAMIS\n1\n47112537.51\n4197913.0\n30191841\n41551354\n50049290\n50094455\n50133690\n‚ñÅ‚ñÅ‚ñÉ‚ñÅ‚ñá\n\n\nSCORE\n1\n10.44\n5.9\n0\n7\n10\n12\n86\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñÅ"
  },
  {
    "objectID": "project.html#mpg-and-a-type-of-cars",
    "href": "project.html#mpg-and-a-type-of-cars",
    "title": "DANL Project",
    "section": "2.2 MPG and a Type of Cars",
    "text": "2.2 MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) üöô üöö üöê.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html",
    "href": "posts/Restaurant/Restaurant.html",
    "title": "Restaurant",
    "section": "",
    "text": "Let‚Äôs analyze the starwars data:"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#variable-description-for-starwars-data.frame",
    "href": "posts/Restaurant/Restaurant.html#variable-description-for-starwars-data.frame",
    "title": "Restaurant",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nCAMIS This is an unique identifier for the entity (restaurant); 10-digit integer\nBORO Borough in which the entity (restaurant) is located.; ‚Ä¢ 1 = MANHATTAN ‚Ä¢ 2 = BRONX ‚Ä¢ 3 = BROOKLYN ‚Ä¢ 4 = QUEENS ‚Ä¢ 5 = STATEN ISLAND ‚Ä¢ 0 = Missing;\nCUISINE DESCRIPTION This field describes the entity (restaurant) cuisine.\nACTION This field represents the actions that is associated with each restaurant inspection. ; ‚Ä¢ Violations were cited in the following area(s). ‚Ä¢ No violations were recorded at the time of this inspection. ‚Ä¢ Establishment re-opened by DOHMH ‚Ä¢ Establishment re-closed by DOHMH ‚Ä¢ Establishment Closed by DOHMH. ‚Ä¢ Violations were cited in the following area(s) and those requiring immediate action were addressed.\nVIOLATION CODE Violation code associated with an establishment (restaurant) inspection\nVIOLATION DESCRIPTION Violation description associated with an establishment (restaurant) inspection\nCRITICAL FLAG Indicator of critical violation; ‚Ä¢ Critical ‚Ä¢ Not Critical ‚Ä¢ Not Applicable; Critical violations are those most likely to contribute to food-borne illness\nSCORE Total score for a particular inspection;\nGRADE Grade associated with the inspection; ‚Ä¢ N = Not Yet Graded ‚Ä¢ A = Grade A ‚Ä¢ B = Grade B ‚Ä¢ C = Grade C ‚Ä¢ Z = Grade Pending ‚Ä¢ P = Grade Pending issued on re-opening following an initial inspection that resulted in a closure"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#mean-standard-deviation-first-quartile-median-thrid-quartile-and-max-of-score-for-each-gradeof-restaurants",
    "href": "posts/Restaurant/Restaurant.html#mean-standard-deviation-first-quartile-median-thrid-quartile-and-max-of-score-for-each-gradeof-restaurants",
    "title": "Restaurant",
    "section": "Mean, Standard Deviation, First Quartile, Median, Thrid Quartile, and Max of Score for each GRADEof restaurants",
    "text": "Mean, Standard Deviation, First Quartile, Median, Thrid Quartile, and Max of Score for each GRADEof restaurants\n\nRestaurants %&gt;% group_by(GRADE) %&gt;% skim(SCORE) %&gt;% select(-n_missing)\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n17633\n\n\nNumber of columns\n12\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nGRADE\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nGRADE\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nSCORE\nA\n1\n9.26\n3.42\n0\n7\n10\n12\n13\n‚ñÅ‚ñÇ‚ñÇ‚ñÖ‚ñá\n\n\nSCORE\nB\n1\n21.03\n4.16\n0\n18\n21\n24\n36\n‚ñÅ‚ñÅ‚ñá‚ñá‚ñÅ\n\n\nSCORE\nC\n1\n38.56\n10.83\n0\n31\n36\n44\n86\n‚ñÅ‚ñá‚ñá‚ñÇ‚ñÅ"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#number-of-restaurants-with-an-a-grade-in-nyc",
    "href": "posts/Restaurant/Restaurant.html#number-of-restaurants-with-an-a-grade-in-nyc",
    "title": "Restaurant",
    "section": "Number of restaurants with an A Grade in NYC",
    "text": "Number of restaurants with an A Grade in NYC"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#the-percentage-of-restaurants-in-nyc-with-a-c-grade",
    "href": "posts/Restaurant/Restaurant.html#the-percentage-of-restaurants-in-nyc-with-a-c-grade",
    "title": "Restaurant",
    "section": "The percentage of restaurants in NYC with a C Grade",
    "text": "The percentage of restaurants in NYC with a C Grade\n\nfreq &lt;- as.data.frame( table(Restaurants$GRADE) )\nprop &lt;- as.data.frame( 100 * prop.table(table(Restaurants$GRADE)) )"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#histograms",
    "href": "posts/Restaurant/Restaurant.html#histograms",
    "title": "Restaurant",
    "section": "Histograms",
    "text": "Histograms\n\nggplot(Restaurants) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_grid( `CRITICAL FLAG` ~ GRADE )"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#histograms-with-varying-x--scale-across-facets",
    "href": "posts/Restaurant/Restaurant.html#histograms-with-varying-x--scale-across-facets",
    "title": "Restaurant",
    "section": "Histograms with varying x- scale across facets",
    "text": "Histograms with varying x- scale across facets\n\nggplot(Restaurants) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_grid( `CRITICAL FLAG` ~ GRADE, scales = 'free_x' )"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#most-common-cuisine-description-values-and-the-cuisine-description-value-that-has-the-highest-proportion-of-grade-a",
    "href": "posts/Restaurant/Restaurant.html#most-common-cuisine-description-values-and-the-cuisine-description-value-that-has-the-highest-proportion-of-grade-a",
    "title": "Restaurant",
    "section": "10 most common Cuisine Description values and the Cuisine Description value that has the highest proportion of Grade A",
    "text": "10 most common Cuisine Description values and the Cuisine Description value that has the highest proportion of Grade A\n\nq2e &lt;- Restaurants %&gt;% \n  group_by(`CUISINE DESCRIPTION`) %&gt;% \n  mutate(n = n()) %&gt;% \n  ungroup() %&gt;% \n  filter(dense_rank(-n) &lt;= 10) %&gt;% \n  group_by(`CUISINE DESCRIPTION`, GRADE) %&gt;% \n  count() %&gt;% \n  group_by(`CUISINE DESCRIPTION`) %&gt;% \n  mutate(prop_A = n / sum(n)) %&gt;% \n  filter(GRADE == 'A') %&gt;% \n  arrange(-prop_A)"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#most-common-names-of-restaurants-in-each-boro-and-the-most-common-dba-value-in-nyc",
    "href": "posts/Restaurant/Restaurant.html#most-common-names-of-restaurants-in-each-boro-and-the-most-common-dba-value-in-nyc",
    "title": "Restaurant",
    "section": "3 most common names of restaurants in each Boro and the most common DBA value in NYC",
    "text": "3 most common names of restaurants in each Boro and the most common DBA value in NYC\n\nq2f &lt;- Restaurants %&gt;% \n  select(DBA, BORO) %&gt;% \n  group_by(BORO, DBA) %&gt;% \n  summarize(n = n()) %&gt;% \n  mutate(ranking = dense_rank(-n)) %&gt;% \n  filter(ranking &lt;= 3) %&gt;% \n  arrange(BORO, ranking)\n\nq2f_ &lt;- Restaurants %&gt;% \n  group_by(DBA) %&gt;% \n  count() %&gt;% \n  arrange(-n)"
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html",
    "href": "posts/NFL 2022/NFL 2022.html",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Let‚Äôs analyze the NFL2022_stuffs data:\nNFL2022_stuffs &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')"
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#variable-description-for-starwars-data.frame",
    "href": "posts/NFL 2022/NFL 2022.html#variable-description-for-starwars-data.frame",
    "title": "NFL in 2022 (HW #5)",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nplay_id Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id Ten digit identifier for NFL game\ndrive Numeric drive number in the game\nweek Season week\nposteam String abbreviation for the team with possession.\nqtr Quarter of the game (5 is overtime).\nhalf_seconds_remaining Numeric seconds remaining in the half.\ndown The down for the given play. Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). If you make 10 yards then you get another set of four downs.\npass Binary indicator if the play was a pass play.\nwp Estimated winning probability for the posteam given the current situation at the start of the given play."
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#q2a",
    "href": "posts/NFL 2022/NFL 2022.html#q2a",
    "title": "NFL in 2022 (HW #5)",
    "section": "Q2a",
    "text": "Q2a\n\nIn data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\n\nNFL2022_stuffs_filtered &lt;- NFL2022_stuffs %&gt;% filter(!is.na(posteam))\n\nprint(NFL2022_stuffs_filtered)\n\n# A tibble: 46,427 √ó 10\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n 1      43 2022_01‚Ä¶     1     1 NYJ         1    NA                   1800     0\n 2      68 2022_01‚Ä¶     1     1 NYJ         1     1                   1796     0\n 3      89 2022_01‚Ä¶     1     1 NYJ         1     1                   1769     1\n 4     115 2022_01‚Ä¶     1     1 NYJ         1     2                   1765     0\n 5     136 2022_01‚Ä¶     1     1 NYJ         1     3                   1741     1\n 6     172 2022_01‚Ä¶     1     1 NYJ         1     4                   1733     0\n 7     202 2022_01‚Ä¶     2     1 BAL         1     1                   1722     1\n 8     230 2022_01‚Ä¶     2     1 BAL         1     2                   1701     1\n 9     254 2022_01‚Ä¶     2     1 BAL         1     3                   1661     0\n10     275 2022_01‚Ä¶     2     1 BAL         1     1                   1621     0\n# ‚Ñπ 46,417 more rows\n# ‚Ñπ 1 more variable: wp &lt;dbl&gt;"
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#q2b.",
    "href": "posts/NFL 2022/NFL 2022.html#q2b.",
    "title": "NFL in 2022 (HW #5)",
    "section": "Q2b.",
    "text": "Q2b.\n\nSummarize the mean value of pass for each posteam when all the following conditions hold:\n\nwp is greater than 20% and less than 75%;\ndown is less than or equal to 2; and\nhalf_seconds_remaining is greater than 120.\n\n\n\nfiltered_data &lt;- NFL2022_stuffs %&gt;%\n  filter(\n    wp &gt; 0.20 & wp &lt; 0.75,\n    down &lt;= 2,\n    half_seconds_remaining &gt; 120\n  )\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(posteam) %&gt;%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nprint(summary_data)\n\n# A tibble: 32 √ó 2\n   posteam mean_pass\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ‚Ñπ 22 more rows"
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#variable-description-for-nfl-data.frame",
    "href": "posts/NFL 2022/NFL 2022.html#variable-description-for-nfl-data.frame",
    "title": "NFL in 2022 (HW #5)",
    "section": "Variable Description for NFL data.frame",
    "text": "Variable Description for NFL data.frame\nThe following describes the variables in the starwars data.frame.\n\nplay_id Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id Ten digit identifier for NFL game\ndrive Numeric drive number in the game\nweek Season week\nposteam String abbreviation for the team with possession.\nqtr Quarter of the game (5 is overtime).\nhalf_seconds_remaining Numeric seconds remaining in the half.\ndown The down for the given play. Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). If you make 10 yards then you get another set of four downs.\npass Binary indicator if the play was a pass play.\nwp Estimated winning probability for the posteam given the current situation at the start of the given play."
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#q2c.",
    "href": "posts/NFL 2022/NFL 2022.html#q2c.",
    "title": "NFL in 2022 (HW #5)",
    "section": "Q2c.",
    "text": "Q2c.\n\nProvide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.\n\nIn the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n\n\nfiltered_data &lt;- NFL2022_stuffs %&gt;%\n  filter(\n    wp &gt; 0.20 & wp &lt; 0.75,\n    down &lt;= 2,\n    half_seconds_remaining &gt; 120\n  )\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(posteam) %&gt;%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nsummary_data &lt;- summary_data %&gt;%\n  arrange(mean_pass)\nggplot(summary_data, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +\n  geom_point() +\n  labs(title = \"Mean Value of pass for Each posteam\",\n       x = \"Percentage of pass plays\",\n       y = \"Team with possession\") +\n  theme_minimal()"
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#variable-description-for-nfl2022_stuffs-data.frame",
    "href": "posts/NFL 2022/NFL 2022.html#variable-description-for-nfl2022_stuffs-data.frame",
    "title": "NFL in 2022 (HW #5)",
    "section": "Variable Description for NFL2022_stuffs data.frame",
    "text": "Variable Description for NFL2022_stuffs data.frame\nThe following describes the variables in the NFL2022_stuffs data.frame.\n\nplay_id Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id Ten digit identifier for NFL game\ndrive Numeric drive number in the game\nweek Season week\nposteam String abbreviation for the team with possession.\nqtr Quarter of the game (5 is overtime).\nhalf_seconds_remaining Numeric seconds remaining in the half.\ndown The down for the given play. Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). If you make 10 yards then you get another set of four downs.\npass Binary indicator if the play was a pass play.\nwp Estimated winning probability for the posteam given the current situation at the start of the given play."
  },
  {
    "objectID": "posts/NFL 2022/NFL 2022.html#q2d.",
    "href": "posts/NFL 2022/NFL 2022.html#q2d.",
    "title": "NFL in 2022 (HW #5)",
    "section": "Q2d.",
    "text": "Q2d.\n\nConsider the following data.frame, NFL2022_epa:\n\n\nNFL2022_epa &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\nrmarkdown::paged_table(NFL2022_epa) \n\n\n\n  \n\n\n\nVariable description for NFL2022_epa\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game. drive: Numeric drive number in the game.\nposteam: String abbreviation for the team with possession. passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\nreceiver: Name of the receiver.\nepa: Expected points added (EPA) by the posteam for the given play.\n\nCreate the data.frame, NFL2022_stuffs_EPA, that includes\n\nAll the variables in the data.frame, NFL2022_stuffs;\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\n\nNFL2022_stuffs_EPA &lt;- left_join(NFL2022_stuffs, NFL2022_epa %&gt;% select(game_id, passer, receiver, epa), by = \"game_id\")\nNFL2022_stuffs_EPA &lt;- NFL2022_stuffs_EPA %&gt;% filter(!is.na(passer))\nprint(NFL2022_stuffs_EPA)\n\n# A tibble: 3,997,285 √ó 13\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n 1       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 2       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 3       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 4       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 5       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 6       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 7       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 8       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 9       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n10       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n# ‚Ñπ 3,997,275 more rows\n# ‚Ñπ 4 more variables: wp &lt;dbl&gt;, passer &lt;chr&gt;, receiver &lt;chr&gt;, epa &lt;dbl&gt;"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html",
    "href": "posts/NFL 2022/NFL2022.html",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Let‚Äôs analyze the NFL2022_stuffs data:\n\nNFL2022_stuffs <- read_csv('https://bcdanl.github.io/data/NFL2022_stuffs.csv')\n\nrmarkdown::paged_table(NFL2022_stuffs) \n\n\n\n  \n\n\n\n\nThe following describes the variables in the NFL2022_stuffs data.frame.\n\nplay_id Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id Ten digit identifier for NFL game\ndrive Numeric drive number in the game\nweek Season week\nposteam String abbreviation for the team with possession.\nqtr Quarter of the game (5 is overtime).\nhalf_seconds_remaining Numeric seconds remaining in the half.\ndown The down for the given play. Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). If you make 10 yards then you get another set of four downs.\npass Binary indicator if the play was a pass play.\nwp Estimated winning probability for the posteam given the current situation at the start of the given play.\n\n\n\n\n\nIn data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\n\nNFL2022_stuffs_filtered <- NFL2022_stuffs %>% filter(!is.na(posteam))\n\nprint(NFL2022_stuffs_filtered)\n\n# A tibble: 46,427 √ó 10\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     <dbl> <chr>    <dbl> <dbl> <chr>   <dbl> <dbl>                  <dbl> <dbl>\n 1      43 2022_01‚Ä¶     1     1 NYJ         1    NA                   1800     0\n 2      68 2022_01‚Ä¶     1     1 NYJ         1     1                   1796     0\n 3      89 2022_01‚Ä¶     1     1 NYJ         1     1                   1769     1\n 4     115 2022_01‚Ä¶     1     1 NYJ         1     2                   1765     0\n 5     136 2022_01‚Ä¶     1     1 NYJ         1     3                   1741     1\n 6     172 2022_01‚Ä¶     1     1 NYJ         1     4                   1733     0\n 7     202 2022_01‚Ä¶     2     1 BAL         1     1                   1722     1\n 8     230 2022_01‚Ä¶     2     1 BAL         1     2                   1701     1\n 9     254 2022_01‚Ä¶     2     1 BAL         1     3                   1661     0\n10     275 2022_01‚Ä¶     2     1 BAL         1     1                   1621     0\n# ‚Ñπ 46,417 more rows\n# ‚Ñπ 1 more variable: wp <dbl>\n\n\n\n\n\n\nSummarize the mean value of pass for each posteam when all the following conditions hold:\n\nwp is greater than 20% and less than 75%;\ndown is less than or equal to 2; and\nhalf_seconds_remaining is greater than 120.\n\n\n\nfiltered_data <- NFL2022_stuffs %>%\n  filter(\n    wp > 0.20 & wp < 0.75,\n    down <= 2,\n    half_seconds_remaining > 120\n  )\nsummary_data <- filtered_data %>%\n  group_by(posteam) %>%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nprint(summary_data)\n\n# A tibble: 32 √ó 2\n   posteam mean_pass\n   <chr>       <dbl>\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ‚Ñπ 22 more rows\n\n\n\n\n\n\nProvide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.\n\nIn the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n\n\nfiltered_data <- NFL2022_stuffs %>%\n  filter(\n    wp > 0.20 & wp < 0.75,\n    down <= 2,\n    half_seconds_remaining > 120\n  )\nsummary_data <- filtered_data %>%\n  group_by(posteam) %>%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nsummary_data <- summary_data %>%\n  arrange(mean_pass)\nggplot(summary_data, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +\n  geom_point() +\n  labs(title = \"Mean Value of pass for Each posteam\",\n       x = \"Percentage of pass plays\",\n       y = \"Team with possession\") +\n  theme_minimal()\n\n\n\n\n\nComment\n\nEvery NFL team falls somewhere within the .45 to .55 range. Washington runs the lowest percentage of pass plays while Cincinnati runs the highest percentage.\n\n\n\n\n\n\nConsider the following data.frame, NFL2022_epa:\n\n\nNFL2022_epa <- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\nrmarkdown::paged_table(NFL2022_epa) \n\n\n\n  \n\n\n\nVariable description for NFL2022_epa\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game. drive: Numeric drive number in the game.\nposteam: String abbreviation for the team with possession. passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\nreceiver: Name of the receiver.\nepa: Expected points added (EPA) by the posteam for the given play.\n\nCreate the data.frame, NFL2022_stuffs_EPA, that includes\n\nAll the variables in the data.frame, NFL2022_stuffs;\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\n\nNFL2022_stuffs_EPA <- left_join(NFL2022_stuffs, NFL2022_epa %>% select(game_id, passer, receiver, epa), by = \"game_id\")\nNFL2022_stuffs_EPA <- NFL2022_stuffs_EPA %>% filter(!is.na(passer))\nprint(NFL2022_stuffs_EPA)\n\n# A tibble: 3,997,285 √ó 13\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     <dbl> <chr>    <dbl> <dbl> <chr>   <dbl> <dbl>                  <dbl> <dbl>\n 1       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 2       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 3       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 4       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 5       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 6       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 7       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 8       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n 9       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n10       1 2022_01‚Ä¶    NA     1 <NA>        1    NA                   1800     0\n# ‚Ñπ 3,997,275 more rows\n# ‚Ñπ 4 more variables: wp <dbl>, passer <chr>, receiver <chr>, epa <dbl>\n\n\n\n\n\n\nProvide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,\n\n\"J.Allen\"\n\"P.Mahomes\"\n\n\n\nselected_passers <- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data <- NFL2022_stuffs_EPA %>%\n  filter(passer %in% selected_passers)\nfiltered_data <- filtered_data %>%\n  mutate(week_group = cut(as.numeric(week), breaks = seq(1, max(as.numeric(week)) + 5, by = 5), include.lowest = TRUE))\nfiltered_data$week_group <- factor(filtered_data$week_group, levels = unique(filtered_data$week_group))\nmean_epa_by_week <- filtered_data %>%\n  group_by(passer, week) %>%\n  summarize(mean_epa = mean(epa, na.rm = TRUE))\nggplot(mean_epa_by_week, aes(x = week, y = mean_epa, group = passer, color = passer)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Mean EPA Comparison for J.Allen and P.Mahomes\",\n       x = \"Week\",\n       y = \"Mean EPA\",\n       color = \"Passer\") +\n  theme_minimal()\n\n\n\n\n\nComment\n\n‚ÄòJ. Allen‚Äô and ‚ÄòP. Mahomes‚Äô exhibit distinct patterns, and the graph provides a clear comparison of their respective performances over the weeks, highlighting any notable differences or similarities in mean EPA values.‚Äù\n\n\n\n\n\n\nCalculate the difference between the mean value of epa for \"J.Allen\" the mean value of epa for \"P.Mahomes\" for each value of week.\n\n\nselected_passers <- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data <- NFL2022_stuffs_EPA %>%\n  filter(passer %in% selected_passers)\nmean_epa_by_passer_and_week <- filtered_data %>%\n  group_by(passer, week) %>%\n  summarize(mean_epa = mean(epa, na.rm = TRUE))\nwide_data <- mean_epa_by_passer_and_week %>%\n  pivot_wider(names_from = passer, values_from = mean_epa)\nwide_data <- wide_data %>%\n  mutate(epa_difference = `J.Allen` - `P.Mahomes`)\nprint(wide_data)\n\n# A tibble: 22 √ó 4\n    week J.Allen P.Mahomes epa_difference\n   <dbl>   <dbl>     <dbl>          <dbl>\n 1     1   0.530    0.698         -0.169 \n 2     2   0.487    0.148          0.339 \n 3     3   0.169    0.246         -0.0763\n 4     4   0.191    0.271         -0.0803\n 5     5   0.627    0.302          0.325 \n 6     6   0.307    0.133          0.173 \n 7     8   0.224   NA             NA     \n 8     9  -0.208    0.0965        -0.304 \n 9    10   0.161    0.589         -0.429 \n10    11   0.192    0.365         -0.173 \n# ‚Ñπ 12 more rows\n\n\n\n\n\n\nSummarize the resulting data.frame in Q2d, with the following four variables:\n\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\nmean_epa: Mean value of epa in 2022 for each passer\nn_pass: Number of observations for each passer\n\nThen find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\n\nsummary_data <- NFL2022_stuffs_EPA %>%\n  group_by(posteam, passer) %>%\n  summarize(\n    mean_epa = mean(epa, na.rm = TRUE),\n    n_pass = n(),\n    .groups = 'drop'\n  )\nquantile_threshold <- quantile(summary_data$n_pass, 0.75)\ntop_passers <- summary_data %>%\n  filter(n_pass >= quantile_threshold) %>%\n  top_n(10, mean_epa)\nprint(top_passers)\n\n# A tibble: 10 √ó 4\n   posteam passer      mean_epa n_pass\n   <chr>   <chr>          <dbl>  <int>\n 1 BUF     J.Brissett     0.442   4160\n 2 CAR     J.Goff         0.359   4400\n 3 CHI     J.Goff         0.475   4711\n 4 CHI     K.Cousins      0.479   4198\n 5 IND     T.Lawrence     0.324   4961\n 6 JAX     P.Mahomes      0.455   5862\n 7 LA      J.Garoppolo    0.460   4452\n 8 MIN     J.Goff         0.289   7105\n 9 SEA     B.Purdy        0.477   5351\n10 TEN     T.Lawrence     0.296   6798"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#variable-description-for-nfl2022_stuffs-data.frame",
    "href": "posts/NFL 2022/NFL2022.html#variable-description-for-nfl2022_stuffs-data.frame",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "The following describes the variables in the NFL2022_stuffs data.frame.\n\nplay_id Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id Ten digit identifier for NFL game\ndrive Numeric drive number in the game\nweek Season week\nposteam String abbreviation for the team with possession.\nqtr Quarter of the game (5 is overtime).\nhalf_seconds_remaining Numeric seconds remaining in the half.\ndown The down for the given play. Basically you get four attempts (aka downs) to move the ball 10 yards (by either running with it or passing it). If you make 10 yards then you get another set of four downs.\npass Binary indicator if the play was a pass play.\nwp Estimated winning probability for the posteam given the current situation at the start of the given play."
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2a",
    "href": "posts/NFL 2022/NFL2022.html#q2a",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "In data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\n\nNFL2022_stuffs_filtered &lt;- NFL2022_stuffs %&gt;% filter(!is.na(posteam))\n\nprint(NFL2022_stuffs_filtered)\n\n# A tibble: 46,427 √ó 10\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n 1      43 2022_01‚Ä¶     1     1 NYJ         1    NA                   1800     0\n 2      68 2022_01‚Ä¶     1     1 NYJ         1     1                   1796     0\n 3      89 2022_01‚Ä¶     1     1 NYJ         1     1                   1769     1\n 4     115 2022_01‚Ä¶     1     1 NYJ         1     2                   1765     0\n 5     136 2022_01‚Ä¶     1     1 NYJ         1     3                   1741     1\n 6     172 2022_01‚Ä¶     1     1 NYJ         1     4                   1733     0\n 7     202 2022_01‚Ä¶     2     1 BAL         1     1                   1722     1\n 8     230 2022_01‚Ä¶     2     1 BAL         1     2                   1701     1\n 9     254 2022_01‚Ä¶     2     1 BAL         1     3                   1661     0\n10     275 2022_01‚Ä¶     2     1 BAL         1     1                   1621     0\n# ‚Ñπ 46,417 more rows\n# ‚Ñπ 1 more variable: wp &lt;dbl&gt;"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2b.",
    "href": "posts/NFL 2022/NFL2022.html#q2b.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Summarize the mean value of pass for each posteam when all the following conditions hold:\n\nwp is greater than 20% and less than 75%;\ndown is less than or equal to 2; and\nhalf_seconds_remaining is greater than 120.\n\n\n\nfiltered_data &lt;- NFL2022_stuffs %&gt;%\n  filter(\n    wp &gt; 0.20 & wp &lt; 0.75,\n    down &lt;= 2,\n    half_seconds_remaining &gt; 120\n  )\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(posteam) %&gt;%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nprint(summary_data)\n\n# A tibble: 32 √ó 2\n   posteam mean_pass\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ‚Ñπ 22 more rows"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2c.",
    "href": "posts/NFL 2022/NFL2022.html#q2c.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Provide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam.\n\nIn the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\n\n\n\nfiltered_data &lt;- NFL2022_stuffs %&gt;%\n  filter(\n    wp &gt; 0.20 & wp &lt; 0.75,\n    down &lt;= 2,\n    half_seconds_remaining &gt; 120\n  )\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(posteam) %&gt;%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\nsummary_data &lt;- summary_data %&gt;%\n  arrange(mean_pass)\nggplot(summary_data, aes(x = mean_pass, y = reorder(posteam, mean_pass))) +\n  geom_point() +\n  labs(title = \"Mean Value of pass for Each posteam\",\n       x = \"Percentage of pass plays\",\n       y = \"Team with possession\") +\n  theme_minimal()\n\n\n\n\n\nComment\n\nEvery NFL team falls somewhere within the .45 to .55 range. Washington runs the lowest percentage of pass plays while Cincinnati runs the highest percentage."
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2d.",
    "href": "posts/NFL 2022/NFL2022.html#q2d.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Consider the following data.frame, NFL2022_epa:\n\n\nNFL2022_epa &lt;- read_csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\nrmarkdown::paged_table(NFL2022_epa) \n\n\n\n  \n\n\n\nVariable description for NFL2022_epa\n\nplay_id: Numeric play identifier that when used with game_id and drive provides the unique identifier for a single play\ngame_id: Ten digit identifier for NFL game. drive: Numeric drive number in the game.\nposteam: String abbreviation for the team with possession. passer: Name of the player who passed a ball to a receiver by initially taking a three-step drop and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks)\nreceiver: Name of the receiver.\nepa: Expected points added (EPA) by the posteam for the given play.\n\nCreate the data.frame, NFL2022_stuffs_EPA, that includes\n\nAll the variables in the data.frame, NFL2022_stuffs;\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\n\nNFL2022_stuffs_EPA &lt;- left_join(NFL2022_stuffs, NFL2022_epa %&gt;% select(game_id, passer, receiver, epa), by = \"game_id\")\nNFL2022_stuffs_EPA &lt;- NFL2022_stuffs_EPA %&gt;% filter(!is.na(passer))\nprint(NFL2022_stuffs_EPA)\n\n# A tibble: 3,997,285 √ó 13\n   play_id game_id  drive  week posteam   qtr  down half_seconds_remaining  pass\n     &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;dbl&gt;                  &lt;dbl&gt; &lt;dbl&gt;\n 1       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 2       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 3       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 4       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 5       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 6       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 7       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 8       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n 9       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n10       1 2022_01‚Ä¶    NA     1 &lt;NA&gt;        1    NA                   1800     0\n# ‚Ñπ 3,997,275 more rows\n# ‚Ñπ 4 more variables: wp &lt;dbl&gt;, passer &lt;chr&gt;, receiver &lt;chr&gt;, epa &lt;dbl&gt;"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2e.",
    "href": "posts/NFL 2022/NFL2022.html#q2e.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Provide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,\n\n\"J.Allen\"\n\"P.Mahomes\"\n\n\n\nselected_passers &lt;- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data &lt;- NFL2022_stuffs_EPA %&gt;%\n  filter(passer %in% selected_passers)\nfiltered_data &lt;- filtered_data %&gt;%\n  mutate(week_group = cut(as.numeric(week), breaks = seq(1, max(as.numeric(week)) + 5, by = 5), include.lowest = TRUE))\nfiltered_data$week_group &lt;- factor(filtered_data$week_group, levels = unique(filtered_data$week_group))\nmean_epa_by_week &lt;- filtered_data %&gt;%\n  group_by(passer, week) %&gt;%\n  summarize(mean_epa = mean(epa, na.rm = TRUE))\nggplot(mean_epa_by_week, aes(x = week, y = mean_epa, group = passer, color = passer)) +\n  geom_line() +\n  geom_point() +\n  labs(title = \"Mean EPA Comparison for J.Allen and P.Mahomes\",\n       x = \"Week\",\n       y = \"Mean EPA\",\n       color = \"Passer\") +\n  theme_minimal()\n\n\n\n\n\nComment\n\n‚ÄòJ. Allen‚Äô and ‚ÄòP. Mahomes‚Äô exhibit distinct patterns, and the graph provides a clear comparison of their respective performances over the weeks, highlighting any notable differences or similarities in mean EPA values.‚Äù"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2f.",
    "href": "posts/NFL 2022/NFL2022.html#q2f.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Calculate the difference between the mean value of epa for \"J.Allen\" the mean value of epa for \"P.Mahomes\" for each value of week.\n\n\nselected_passers &lt;- c(\"J.Allen\", \"P.Mahomes\")\nfiltered_data &lt;- NFL2022_stuffs_EPA %&gt;%\n  filter(passer %in% selected_passers)\nmean_epa_by_passer_and_week &lt;- filtered_data %&gt;%\n  group_by(passer, week) %&gt;%\n  summarize(mean_epa = mean(epa, na.rm = TRUE))\nwide_data &lt;- mean_epa_by_passer_and_week %&gt;%\n  pivot_wider(names_from = passer, values_from = mean_epa)\nwide_data &lt;- wide_data %&gt;%\n  mutate(epa_difference = `J.Allen` - `P.Mahomes`)\nprint(wide_data)\n\n# A tibble: 22 √ó 4\n    week J.Allen P.Mahomes epa_difference\n   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;          &lt;dbl&gt;\n 1     1   0.530    0.698         -0.169 \n 2     2   0.487    0.148          0.339 \n 3     3   0.169    0.246         -0.0763\n 4     4   0.191    0.271         -0.0803\n 5     5   0.627    0.302          0.325 \n 6     6   0.307    0.133          0.173 \n 7     8   0.224   NA             NA     \n 8     9  -0.208    0.0965        -0.304 \n 9    10   0.161    0.589         -0.429 \n10    11   0.192    0.365         -0.173 \n# ‚Ñπ 12 more rows"
  },
  {
    "objectID": "posts/NFL 2022/NFL2022.html#q2g.",
    "href": "posts/NFL 2022/NFL2022.html#q2g.",
    "title": "NFL in 2022 (HW #5)",
    "section": "",
    "text": "Summarize the resulting data.frame in Q2d, with the following four variables:\n\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\nmean_epa: Mean value of epa in 2022 for each passer\nn_pass: Number of observations for each passer\n\nThen find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\n\nsummary_data &lt;- NFL2022_stuffs_EPA %&gt;%\n  group_by(posteam, passer) %&gt;%\n  summarize(\n    mean_epa = mean(epa, na.rm = TRUE),\n    n_pass = n(),\n    .groups = 'drop'\n  )\nquantile_threshold &lt;- quantile(summary_data$n_pass, 0.75)\ntop_passers &lt;- summary_data %&gt;%\n  filter(n_pass &gt;= quantile_threshold) %&gt;%\n  top_n(10, mean_epa)\nprint(top_passers)\n\n# A tibble: 10 √ó 4\n   posteam passer      mean_epa n_pass\n   &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;  &lt;int&gt;\n 1 BUF     J.Brissett     0.442   4160\n 2 CAR     J.Goff         0.359   4400\n 3 CHI     J.Goff         0.475   4711\n 4 CHI     K.Cousins      0.479   4198\n 5 IND     T.Lawrence     0.324   4961\n 6 JAX     P.Mahomes      0.455   5862\n 7 LA      J.Garoppolo    0.460   4452\n 8 MIN     J.Goff         0.289   7105\n 9 SEA     B.Purdy        0.477   5351\n10 TEN     T.Lawrence     0.296   6798"
  },
  {
    "objectID": "posts/Beer Markets/blog-1.html",
    "href": "posts/Beer Markets/blog-1.html",
    "title": "Starwars",
    "section": "",
    "text": "Let‚Äôs analyze the starwars data:"
  },
  {
    "objectID": "posts/Beer Markets/blog-1.html#variable-description-for-starwars-data.frame",
    "href": "posts/Beer Markets/blog-1.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/Beer Markets/blog-1.html#human-vs.-droid",
    "href": "posts/Beer Markets/blog-1.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs.¬†Droid",
    "text": "Human vs.¬†Droid\n\nggplot(data = \n         starwars %>% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/Spotify/Spotify.html",
    "href": "posts/Spotify/Spotify.html",
    "title": "Spotify",
    "section": "",
    "text": "Let‚Äôs analyze the spotify_all data:"
  },
  {
    "objectID": "posts/Spotify/Spotify.html#variable-description-for-starwars-data.frame",
    "href": "posts/Spotify/Spotify.html#variable-description-for-starwars-data.frame",
    "title": "Spotify",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/Spotify/Spotify.html#human-vs.-droid",
    "href": "posts/Spotify/Spotify.html#human-vs.-droid",
    "title": "Spotify",
    "section": "Human vs.¬†Droid",
    "text": "Human vs.¬†Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#variable-description-for-restaurant-data.frame",
    "href": "posts/Restaurant/Restaurant.html#variable-description-for-restaurant-data.frame",
    "title": "Restaurant",
    "section": "Variable Description for restaurant data.frame",
    "text": "Variable Description for restaurant data.frame\nThe following describes the variables in the restaurant data.frame.\n\nCAMIS This is an unique identifier for the entity (restaurant); 10-digit integer\nBORO Borough in which the entity (restaurant) is located.; ‚Ä¢ 1 = MANHATTAN ‚Ä¢ 2 = BRONX ‚Ä¢ 3 = BROOKLYN ‚Ä¢ 4 = QUEENS ‚Ä¢ 5 = STATEN ISLAND ‚Ä¢ 0 = Missing;\nCUISINE DESCRIPTION This field describes the entity (restaurant) cuisine.\nACTION This field represents the actions that is associated with each restaurant inspection. ; ‚Ä¢ Violations were cited in the following area(s). ‚Ä¢ No violations were recorded at the time of this inspection. ‚Ä¢ Establishment re-opened by DOHMH ‚Ä¢ Establishment re-closed by DOHMH ‚Ä¢ Establishment Closed by DOHMH. ‚Ä¢ Violations were cited in the following area(s) and those requiring immediate action were addressed.\nVIOLATION CODE Violation code associated with an establishment (restaurant) inspection\nVIOLATION DESCRIPTION Violation description associated with an establishment (restaurant) inspection\nCRITICAL FLAG Indicator of critical violation; ‚Ä¢ Critical ‚Ä¢ Not Critical ‚Ä¢ Not Applicable; Critical violations are those most likely to contribute to food-borne illness\nSCORE Total score for a particular inspection;\nGRADE Grade associated with the inspection; ‚Ä¢ N = Not Yet Graded ‚Ä¢ A = Grade A ‚Ä¢ B = Grade B ‚Ä¢ C = Grade C ‚Ä¢ Z = Grade Pending ‚Ä¢ P = Grade Pending issued on re-opening following an initial inspection that resulted in a closure"
  },
  {
    "objectID": "posts/Restaurant/Restaurant.html#q1c.",
    "href": "posts/Restaurant/Restaurant.html#q1c.",
    "title": "Restaurant",
    "section": "Q1c.",
    "text": "Q1c.\n\nProvide both (1) ggplot code and (2) a simple comment to describe how the distribution of SCORE varies by GRADE and CRITICAL FLAG.\n\n\n\n\n\nggplot(restaurant) +\n  geom_boxplot(aes(x = SCORE, y = GRADE, fill = GRADE) ) +\n  facet_grid( `CRITICAL FLAG` ~ . )\n\n\n\n\n\nHistograms\n\n\nggplot(restaurant) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_grid( `CRITICAL FLAG` ~ GRADE )\n\n\n\n\n\nHistograms with varying x- and y- scales across facets\n\n\nggplot(restaurant) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_wrap( `CRITICAL FLAG` ~ GRADE, scales = 'free' )"
  },
  {
    "objectID": "posts/Spotify/Spotify.html#variable-description-for-restaurant-data.frame",
    "href": "posts/Spotify/Spotify.html#variable-description-for-restaurant-data.frame",
    "title": "Spotify",
    "section": "Variable Description for restaurant data.frame",
    "text": "Variable Description for restaurant data.frame\nThe following describes the variables in the restaurant data.frame.\n\nCAMIS This is an unique identifier for the entity (restaurant); 10-digit integer\nBORO Borough in which the entity (restaurant) is located.; ‚Ä¢ 1 = MANHATTAN ‚Ä¢ 2 = BRONX ‚Ä¢ 3 = BROOKLYN ‚Ä¢ 4 = QUEENS ‚Ä¢ 5 = STATEN ISLAND ‚Ä¢ 0 = Missing;\nCUISINE DESCRIPTION This field describes the entity (restaurant) cuisine.\nACTION This field represents the actions that is associated with each restaurant inspection. ; ‚Ä¢ Violations were cited in the following area(s). ‚Ä¢ No violations were recorded at the time of this inspection. ‚Ä¢ Establishment re-opened by DOHMH ‚Ä¢ Establishment re-closed by DOHMH ‚Ä¢ Establishment Closed by DOHMH. ‚Ä¢ Violations were cited in the following area(s) and those requiring immediate action were addressed.\nVIOLATION CODE Violation code associated with an establishment (restaurant) inspection\nVIOLATION DESCRIPTION Violation description associated with an establishment (restaurant) inspection\nCRITICAL FLAG Indicator of critical violation; ‚Ä¢ Critical ‚Ä¢ Not Critical ‚Ä¢ Not Applicable; Critical violations are those most likely to contribute to food-borne illness\nSCORE Total score for a particular inspection;\nGRADE Grade associated with the inspection; ‚Ä¢ N = Not Yet Graded ‚Ä¢ A = Grade A ‚Ä¢ B = Grade B ‚Ä¢ C = Grade C ‚Ä¢ Z = Grade Pending ‚Ä¢ P = Grade Pending issued on re-opening following an initial inspection that resulted in a closure"
  },
  {
    "objectID": "posts/Spotify/Spotify.html#q1c.",
    "href": "posts/Spotify/Spotify.html#q1c.",
    "title": "Spotify",
    "section": "Q1c.",
    "text": "Q1c.\n\nProvide both (1) ggplot codes and (2) a couple of sentences to describe the relationship between pos and the ten most popular artists.\n\n\nQ1c <- spotify_all %>% \n  group_by(artist_name) %>% \n  mutate(n_popular_artist = n()) %>% \n  ungroup() %>% \n  mutate( artist_ranking = dense_rank( desc(n_popular_artist) ) ) %>% \n  filter( artist_ranking <= 10) \nggplot(Q1c,\n       aes(x = pos, y = fct_reorder(artist_name, -artist_ranking)) ) +\n  geom_boxplot() +\n  stat_summary(\n    fun = mean,\n    color = 'red'\n  )"
  },
  {
    "objectID": "posts/Beer Markets/Beer_Markets.html",
    "href": "posts/Beer Markets/Beer_Markets.html",
    "title": "Beer Markets",
    "section": "",
    "text": "Let‚Äôs analyze the beer_mkts data:"
  },
  {
    "objectID": "posts/Beer Markets/Beer_Markets.html#variable-description-for-starwars-data.frame",
    "href": "posts/Beer Markets/Beer_Markets.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/Beer Markets/Beer_Markets.html#human-vs.-droid",
    "href": "posts/Beer Markets/Beer_Markets.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs.¬†Droid",
    "text": "Human vs.¬†Droid\n\nggplot(data = \n         starwars %>% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/Spotify/Spotify.html#variable-description-for-spotify_all-data.frame",
    "href": "posts/Spotify/Spotify.html#variable-description-for-spotify_all-data.frame",
    "title": "Spotify",
    "section": "Variable Description for spotify_all data.frame",
    "text": "Variable Description for spotify_all data.frame\nThe following describes the variables in the spotify_all data.frame.\n\npid: playlist ID; unique ID for playlist\nplaylist_name: a name of playlist\npos: a position of the track within a playlist (starting from 0)\nartist_name: name of the track‚Äôs primary artist\ntrack_name: name of the track\nduration_ms: duration of the track in milliseconds\nalbum_name: name of the track‚Äôs album"
  },
  {
    "objectID": "posts/Beer Markets/Beer_Markets.html#variable-description-for-beer_markets-data.frame",
    "href": "posts/Beer Markets/Beer_Markets.html#variable-description-for-beer_markets-data.frame",
    "title": "Beer Markets",
    "section": "Variable Description for Beer_Markets data.frame",
    "text": "Variable Description for Beer_Markets data.frame\nThe following describes the variables in the Beer_Markets data.frame.\n\nhh: an identifier of the household;\nX_purchase_desc: details on the purchased item;\nquantity: the number of items purchased;\nbrand: Bud Light, Busch Light, Coors Light, Miller Lite, or Natural Light;\ndollar_spent: total dollar value of purchase;\nbeer_floz: total volume of beer, in fluid ounces;\nprice_per_floz: price per fl.oz. (i.e., beer spent/beer floz);\ncontainer: the type of container;\npromo: Whether the item was promoted (coupon or otherwise);\nmarket: Scan-track market (or state if rural); demographic data, including gender, marital status, household income, class of work, race, education, age, the size of household, and whether or not the household has a microwave or a dishwasher."
  },
  {
    "objectID": "posts/Beer Markets/Beer_Markets.html#q2b.",
    "href": "posts/Beer Markets/Beer_Markets.html#q2b.",
    "title": "Beer Markets",
    "section": "Q2b.",
    "text": "Q2b.\n\nFor households that purchased BUD LIGHT at least once, what fraction of households did purchase only BUD LIGHT?\nFor households that purchased BUSCH LIGHT at least once, what fraction of households did purchase only BUSCH LIGHT?\nFor households that purchased COORS LIGHT at least once, what fraction of households did purchase only COORS LIGHT?\nFor households that purchased MILLER LITE at least once, what fraction of households did purchase only MILLER LITE?\nFor households that purchased NATURAL LIGHT at least once, what fraction of households did purchase only NATURAL LIGHT?\nWhich beer brand does have the largest proportion of such loyal consumers?\n\n\nq2b <- beer_mkts %>% \n  mutate(bud = ifelse(brand==\"BUD LIGHT\", 1, 0),\n         busch = ifelse(brand==\"BUSCH LIGHT\", 1, 0),\n         coors = ifelse(brand==\"COORS LIGHT\", 1, 0),\n         miller = ifelse(brand==\"MILLER LITE\", 1, 0),\n         natural = ifelse(brand==\"NATURAL LIGHT\", 1, 0),\n         .after = hh) %>% \n  select(hh:natural) %>% \n  group_by(hh) %>% \n  summarise(n_transactions = n(), \n            n_bud = sum(bud), \n            n_busch = sum(busch), \n            n_coors = sum(coors), \n            n_miller = sum(miller), \n            n_natural = sum(natural) \n  ) %>% \n  summarise(loyal_bud = sum(n_transactions == n_bud) / sum(n_bud > 0), \n            loyal_busch = sum(n_transactions == n_busch) / sum(n_busch > 0),\n            loyal_coors = sum(n_transactions == n_coors) / sum(n_coors > 0),\n            loyal_miller = sum(n_transactions == n_miller) / sum(n_miller > 0),\n            loyal_natural = sum(n_transactions == n_natural) / sum(n_natural > 0)\n  )\nq2b\n\n# A tibble: 1 √ó 5\n  loyal_bud loyal_busch loyal_coors loyal_miller loyal_natural\n      <dbl>       <dbl>       <dbl>        <dbl>         <dbl>\n1     0.660       0.473       0.639        0.631         0.510"
  },
  {
    "objectID": "posts/Beer Markets/Beer_Markets.html#q2c",
    "href": "posts/Beer Markets/Beer_Markets.html#q2c",
    "title": "Beer Markets",
    "section": "Q2c",
    "text": "Q2c\n\nFor each household, calculate the number of beer transactions.\nFor each household, calculate the proportion of each beer brand choice.\n\n\nq2c <- beer_mkts %>% \n  count(hh, brand) %>% \n  group_by(hh) %>% \n  mutate(n_tot = sum(n)) %>%  \n  arrange(hh, brand) %>% \n  mutate( prop = n / n_tot ) \nq2c\n\n# A tibble: 13,202 √ó 5\n# Groups:   hh [10,408]\n        hh brand           n n_tot  prop\n     <dbl> <chr>       <int> <int> <dbl>\n 1 2000235 BUD LIGHT       1     1 1    \n 2 2000417 COORS LIGHT     8     8 1    \n 3 2000711 COORS LIGHT    13    13 1    \n 4 2000946 BUD LIGHT       1     2 0.5  \n 5 2000946 MILLER LITE     1     2 0.5  \n 6 2001521 BUD LIGHT       6    11 0.545\n 7 2001521 COORS LIGHT     3    11 0.273\n 8 2001521 MILLER LITE     2    11 0.182\n 9 2001531 BUSCH LIGHT     1     1 1    \n10 2001581 BUSCH LIGHT     5     5 1    \n# ‚Ñπ 13,192 more rows"
  },
  {
    "objectID": "posts/Beer Markets/Beer_Markets.html#q2a.",
    "href": "posts/Beer Markets/Beer_Markets.html#q2a.",
    "title": "Beer Markets",
    "section": "Q2a.",
    "text": "Q2a.\n\nFind the top 5 markets in terms of the total beer_floz.\nFind the top 5 markets in terms of the total beer_floz of BUD LIGHT.\nFind the top 5 markets in terms of the total beer_floz of BUSCH LIGHT.\nFind the top 5 markets in terms of the total beer_floz of COORS LIGHT.\nFind the top 5 markets in terms of the total beer_floz of MILLER LITE.\nFind the top 5 markets in terms of the total beer_floz of NATURAL LIGHT.\n\n\nQ2a1 <- beer_mkts %>% \n   group_by(market) %>% \n   summarize(beer_floz_tot = sum(beer_floz, na.rm = T)) %>% \n   arrange(-beer_floz_tot) %>% \n   slice(1:5)\n\nQ2a_bud <- beer_mkts %>% \n  filter(brand == \"BUD LIGHT\") %>% \n  group_by(market) %>% \n  summarize(beer_floz_tot = sum(beer_floz, na.rm = T)) %>% \n  arrange(-beer_floz_tot) %>% \n  slice(1:5)\n\nQ2a_busch <- beer_mkts %>% \n  filter(brand == \"BUSCH LIGHT\") %>% \n  group_by(market) %>% \n  summarize(beer_floz_tot = sum(beer_floz, na.rm = T)) %>% \n  arrange(-beer_floz_tot) %>% \n  slice(1:5)\n\nQ2a_coors <- beer_mkts %>% \n  filter(brand == \"COORS LIGHT\") %>% \n  group_by(market) %>% \n  summarize(beer_floz_tot = sum(beer_floz, na.rm = T)) %>% \n  arrange(-beer_floz_tot) %>% \n  slice(1:5)\n\nQ2a_miller <- beer_mkts %>% \n  filter(brand == \"MILLER LITE\") %>% \n  group_by(market) %>% \n  summarize(beer_floz_tot = sum(beer_floz, na.rm = T)) %>% \n  arrange(-beer_floz_tot) %>% \n  slice(1:5)\n\nQ2a_natural <- beer_mkts %>% \n  filter(brand == \"NATURAL LIGHT\") %>% \n  group_by(market) %>% \n  summarize(beer_floz_tot = sum(beer_floz, na.rm = T)) %>% \n  arrange(-beer_floz_tot) %>% \n  slice(1:5)"
  },
  {
    "objectID": "posts/Beer Markets/Beer_Markets.html#q2c.",
    "href": "posts/Beer Markets/Beer_Markets.html#q2c.",
    "title": "Beer Markets",
    "section": "Q2c.",
    "text": "Q2c.\n\nFor each household, calculate the number of beer transactions.\nFor each household, calculate the proportion of each beer brand choice.\n\n\nq2c <- beer_mkts %>% \n  count(hh, brand) %>% \n  group_by(hh) %>% \n  mutate(n_tot = sum(n)) %>%  \n  arrange(hh, brand) %>% \n  mutate( prop = n / n_tot ) \nq2c\n\n# A tibble: 13,202 √ó 5\n# Groups:   hh [10,408]\n        hh brand           n n_tot  prop\n     <dbl> <chr>       <int> <int> <dbl>\n 1 2000235 BUD LIGHT       1     1 1    \n 2 2000417 COORS LIGHT     8     8 1    \n 3 2000711 COORS LIGHT    13    13 1    \n 4 2000946 BUD LIGHT       1     2 0.5  \n 5 2000946 MILLER LITE     1     2 0.5  \n 6 2001521 BUD LIGHT       6    11 0.545\n 7 2001521 COORS LIGHT     3    11 0.273\n 8 2001521 MILLER LITE     2    11 0.182\n 9 2001531 BUSCH LIGHT     1     1 1    \n10 2001581 BUSCH LIGHT     5     5 1    \n# ‚Ñπ 13,192 more rows"
  },
  {
    "objectID": "posts/Spotify/Spotify.html#histogram",
    "href": "posts/Spotify/Spotify.html#histogram",
    "title": "Spotify",
    "section": "Histogram",
    "text": "Histogram\n\nggplot(Q1c) +\n  geom_histogram(aes(x = pos, fill = artist_name), binwidth = 1, position = \"dodge\") +\n  facet_wrap(~artist_name, scales = \"free\") +\n  labs(title = \"Distribution of pos for the Ten Most Popular Artists\",\n       x = \"pos\",\n       y = \"Frequency\") +\n  theme_minimal()"
  },
  {
    "objectID": "Classwork.html",
    "href": "Classwork.html",
    "title": "Classwork",
    "section": "",
    "text": "2 Question 1 - Billboard Charts\n\nThe following data is for Question 1:\n\n\nbillboard <- read_csv('https://bcdanl.github.io/data/billboard.csv')\n\n\n\n3 Q1a.\n\nDescribe how the distribution of rating varies across week 1, week 2, and week 3 using the faceted histogram.\n\n\n\n\n#Q1b. * Which artist(s) have the most number of tracks in billboard data.frame? * Do not double-count an artist‚Äôs tracks if they appear in multiple weeks."
  },
  {
    "objectID": "project.html#top-5-dba-in-terms-of-score-by-each-boro",
    "href": "project.html#top-5-dba-in-terms-of-score-by-each-boro",
    "title": "DANL Project",
    "section": "2.16 Top 5 DBA in terms of SCORE by each BORO",
    "text": "2.16 Top 5 DBA in terms of SCORE by each BORO\n\nfiltered_data <- restaurant %>%\n  select(BORO, DBA, SCORE)\ngrouped_data <- filtered_data %>%\n  group_by(BORO, DBA) %>%\n  summarise(AVG_SCORE = mean(SCORE, na.rm = TRUE))\nranked_data <- grouped_data %>%\n  arrange(BORO, desc(AVG_SCORE)) %>%\n  group_by(BORO) %>%\n  mutate(rank = row_number())\ntop_5_dbas <- ranked_data %>%\n  filter(rank <= 5)\nprint(top_5_dbas)\n\n# A tibble: 25 √ó 4\n# Groups:   BORO [5]\n   BORO     DBA                             AVG_SCORE  rank\n   <chr>    <chr>                               <dbl> <int>\n 1 Bronx    bedford cafe & restaurant              49     1\n 2 Bronx    g & s                                  47     2\n 3 Bronx    el club valle restaurant               46     3\n 4 Bronx    el barril restaurant                   45     4\n 5 Bronx    luna cafe                              44     5\n 6 Brooklyn flaming grill and modern buffet        66     1\n 7 Brooklyn casa publica                           62     2\n 8 Brooklyn mi candilejas restaurant               62     3\n 9 Brooklyn kami sushi, yummy thai                 61     4\n10 Brooklyn fulton burger                          59     5\n# ‚Ñπ 15 more rows\n\n\n\nfiltered_data <- restaurant %>%\n  select(BORO, DBA, SCORE)\ngrouped_data <- filtered_data %>%\n  group_by(BORO, DBA) %>%\n  summarise(AVG_SCORE = mean(SCORE, na.rm = TRUE))\nranked_data <- grouped_data %>%\n  arrange(BORO, desc(AVG_SCORE)) %>%\n  group_by(BORO) %>%\n  mutate(rank = row_number())\ntop_5_dbas <- ranked_data %>%\n  filter(rank <= 5)\nggplot(top_5_dbas, aes(x = reorder(DBA, AVG_SCORE), y = AVG_SCORE, fill = BORO)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Top 5 Highest Scoring DBAs in Each Borough\",\n       x = \"DBA\",\n       y = \"Average Score\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "project.html#top-5-cuisine-description-in-each-boro",
    "href": "project.html#top-5-cuisine-description-in-each-boro",
    "title": "DANL Project",
    "section": "2.19 Top 5 CUISINE DESCRIPTION in each BORO",
    "text": "2.19 Top 5 CUISINE DESCRIPTION in each BORO\n\nfiltered_data <- restaurant %>%\n  select(BORO, `CUISINE DESCRIPTION`)\ncounted_data <- filtered_data %>%\n  count(BORO, `CUISINE DESCRIPTION`, sort = TRUE)\ntop_5_cuisines <- counted_data %>%\n  group_by(BORO) %>%\n  slice_max(n = 5, order_by = n)\nprint(top_5_cuisines)\n\n# A tibble: 25 √ó 3\n# Groups:   BORO [5]\n   BORO     `CUISINE DESCRIPTION`     n\n   <chr>    <chr>                 <int>\n 1 Bronx    American                224\n 2 Bronx    Chinese                 164\n 3 Bronx    Pizza                   145\n 4 Bronx    Latin American          117\n 5 Bronx    Chicken                  92\n 6 Brooklyn American                783\n 7 Brooklyn Chinese                 484\n 8 Brooklyn Coffee/Tea              383\n 9 Brooklyn Pizza                   295\n10 Brooklyn Caribbean               222\n# ‚Ñπ 15 more rows"
  },
  {
    "objectID": "project.html#visualization-of-top-5-cuisine-description-in-each-boro",
    "href": "project.html#visualization-of-top-5-cuisine-description-in-each-boro",
    "title": "DANL Project",
    "section": "2.20 Visualization of top 5 CUISINE DESCRIPTION in each BORO",
    "text": "2.20 Visualization of top 5 CUISINE DESCRIPTION in each BORO\n\nggplot(top_5_cuisines, aes(x = reorder(`CUISINE DESCRIPTION`, n), y = n, fill = BORO)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Top 5 Cuisine Descriptions in Each Borough\",\n       x = \"Cuisine Description\",\n       y = \"Count\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  facet_wrap(~ BORO, scales = \"free_y\", ncol = 2)"
  },
  {
    "objectID": "project.html#ranking-boro-by-avg-score",
    "href": "project.html#ranking-boro-by-avg-score",
    "title": "DANL Project",
    "section": "2.2 Ranking BORO by AVG SCORE",
    "text": "2.2 Ranking BORO by AVG SCORE\n\nfiltered_data <- restaurant %>%\n  select(BORO, DBA, SCORE)\naverage_scores_by_boro <- filtered_data %>%\n  group_by(BORO, DBA) %>%\n  summarise(AVG_SCORE = mean(SCORE, na.rm = TRUE), .groups = 'drop')\naverage_score_by_boro <- average_scores_by_boro %>%\n  group_by(BORO) %>%\n  summarise(Overall_AVG_SCORE = mean(AVG_SCORE, na.rm = TRUE))\nprint(average_score_by_boro)\n\n# A tibble: 5 √ó 2\n  BORO          Overall_AVG_SCORE\n  <chr>                     <dbl>\n1 Bronx                      11.1\n2 Brooklyn                   10.6\n3 Manhattan                  10.4\n4 Queens                     11.2\n5 Staten Island              11.0"
  },
  {
    "objectID": "project.html#visualization-of-ranking-boro-by-avg-score",
    "href": "project.html#visualization-of-ranking-boro-by-avg-score",
    "title": "DANL Project",
    "section": "2.3 Visualization of ranking Boro by AVG SCORE",
    "text": "2.3 Visualization of ranking Boro by AVG SCORE\n\nggplot(average_score_by_boro, aes(x = BORO, y = Overall_AVG_SCORE, fill = BORO)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Average Score of DBAs in Each Borough\",\n       x = \"Borough\",\n       y = \"Average Score\") +\n  theme_minimal() +\n  scale_x_discrete(labels = scales::wrap_format(10))"
  },
  {
    "objectID": "project.html#amount-of-critical-critical-flag-by-boro",
    "href": "project.html#amount-of-critical-critical-flag-by-boro",
    "title": "DANL Project",
    "section": "2.5 Amount of CRITICAL CRITICAL FLAG by BORO",
    "text": "2.5 Amount of CRITICAL CRITICAL FLAG by BORO\n\nfiltered_data <- restaurant %>%\n  select(BORO, `CRITICAL FLAG`)\ncritical_flags_by_boro <- filtered_data %>%\n  filter(`CRITICAL FLAG` == \"Critical\") %>%\n  group_by(BORO) %>%\n  summarise(Critical_Flag_Count = n(), .groups = 'drop')\nprint(critical_flags_by_boro)\n\n# A tibble: 5 √ó 2\n  BORO          Critical_Flag_Count\n  <chr>                       <int>\n1 Bronx                         732\n2 Brooklyn                     2333\n3 Manhattan                    3464\n4 Queens                       2001\n5 Staten Island                 333"
  },
  {
    "objectID": "project.html#analysis",
    "href": "project.html#analysis",
    "title": "DANL Project",
    "section": "2.4 Analysis",
    "text": "2.4 Analysis"
  },
  {
    "objectID": "project.html#visualization-of-amount-of-critical-critical-flag-by-boro",
    "href": "project.html#visualization-of-amount-of-critical-critical-flag-by-boro",
    "title": "DANL Project",
    "section": "2.6 Visualization of amount of CRITICAL CRITICAL FLAG by BORO",
    "text": "2.6 Visualization of amount of CRITICAL CRITICAL FLAG by BORO\n\nggplot(critical_flags_by_boro, aes(x = BORO, y = Critical_Flag_Count, fill = BORO)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Count of Critical Flags by Borough\",\n       x = \"Borough\",\n       y = \"Critical Flag Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "project.html#analysis-1",
    "href": "project.html#analysis-1",
    "title": "DANL Project",
    "section": "2.7 Analysis",
    "text": "2.7 Analysis"
  },
  {
    "objectID": "project.html#total-number-of-a-grade-by-boro",
    "href": "project.html#total-number-of-a-grade-by-boro",
    "title": "DANL Project",
    "section": "2.8 Total number of A GRADE by BORO",
    "text": "2.8 Total number of A GRADE by BORO\n\nfiltered_data <- restaurant %>%\n  select(BORO, GRADE)\na_grades_by_boro <- filtered_data %>%\n  filter(GRADE == \"A\") %>%\n  group_by(BORO) %>%\n  summarise(A_Grade_Count = n(), .groups = 'drop')\nprint(a_grades_by_boro)\n\n# A tibble: 5 √ó 2\n  BORO          A_Grade_Count\n  <chr>                 <int>\n1 Bronx                  1316\n2 Brooklyn               4222\n3 Manhattan              6382\n4 Queens                 3740\n5 Staten Island           645"
  },
  {
    "objectID": "project.html#visualization-of-total-number-of-a-grade-by-boro",
    "href": "project.html#visualization-of-total-number-of-a-grade-by-boro",
    "title": "DANL Project",
    "section": "2.9 Visualization of Total number of A GRADE by BORO",
    "text": "2.9 Visualization of Total number of A GRADE by BORO\n\nggplot(a_grades_by_boro, aes(x = BORO, y = A_Grade_Count, fill = BORO)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Total Count of 'A' Grades by Borough\",\n       x = \"Borough\",\n       y = \"'A' Grade Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "project.html#analysis-2",
    "href": "project.html#analysis-2",
    "title": "DANL Project",
    "section": "2.10 Analysis",
    "text": "2.10 Analysis"
  },
  {
    "objectID": "project.html#total-number-of-c-grade-by-boro",
    "href": "project.html#total-number-of-c-grade-by-boro",
    "title": "DANL Project",
    "section": "2.11 Total number of C GRADE by BORO",
    "text": "2.11 Total number of C GRADE by BORO\n\nfiltered_data <- restaurant %>%\n  select(BORO, GRADE)\nc_grades_by_boro <- filtered_data %>%\n  filter(GRADE == \"C\") %>%\n  group_by(BORO) %>%\n  summarise(C_Grade_Count = n(), .groups = 'drop')\nprint(c_grades_by_boro)\n\n# A tibble: 5 √ó 2\n  BORO          C_Grade_Count\n  <chr>                 <int>\n1 Bronx                    25\n2 Brooklyn                 84\n3 Manhattan                97\n4 Queens                   83\n5 Staten Island             5"
  },
  {
    "objectID": "project.html#visualization-of-total-number-of-c-grade-by-boro",
    "href": "project.html#visualization-of-total-number-of-c-grade-by-boro",
    "title": "DANL Project",
    "section": "2.12 Visualization of Total number of C GRADE by BORO",
    "text": "2.12 Visualization of Total number of C GRADE by BORO\n\nfiltered_data <- restaurant %>%\n  select(BORO, DBA, GRADE)\na_grades_by_boro <- filtered_data %>%\n  filter(GRADE == \"C\") %>%\n  group_by(BORO, DBA) %>%\n  summarise(A_Grade_Count = n_distinct(DBA), .groups = 'drop')\nprint(a_grades_by_boro)\n\n# A tibble: 294 √ó 3\n   BORO  DBA                       A_Grade_Count\n   <chr> <chr>                             <int>\n 1 Bronx 3a's legacy salad & grill             1\n 2 Bronx african home restaurant               1\n 3 Bronx bambu juice bar                       1\n 4 Bronx bedford cafe & restaurant             1\n 5 Bronx bella pizza of bronx                  1\n 6 Bronx chickenfest azteca                    1\n 7 Bronx el barril restaurant                  1\n 8 Bronx el club valle restaurant              1\n 9 Bronx el nuevo bohio restaurant             1\n10 Bronx el nuevo roble billiards              1\n# ‚Ñπ 284 more rows\n\nggplot(a_grades_by_boro, aes(x = BORO, y = A_Grade_Count, fill = BORO)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Count of 'C' Grades by Borough\",\n       x = \"Borough\",\n       y = \"'C' Grade Count\") +\n  theme_minimal()"
  },
  {
    "objectID": "project.html#analysis-3",
    "href": "project.html#analysis-3",
    "title": "DANL Project",
    "section": "2.13 Analysis",
    "text": "2.13 Analysis"
  },
  {
    "objectID": "project.html#proportion-of-c-grade-by-boro",
    "href": "project.html#proportion-of-c-grade-by-boro",
    "title": "DANL Project",
    "section": "2.14 Proportion of C GRADE by BORO",
    "text": "2.14 Proportion of C GRADE by BORO\n\nfiltered_data <- restaurant %>%\n  select(BORO, DBA)\nfiltered_data$BORO[is.na(filtered_data$BORO)] <- 0\ntotal_dbas_by_boro <- filtered_data %>%\n  group_by(BORO) %>%\n  summarise(DBA_Count = n_distinct(DBA), .groups = 'drop')\nprint(total_dbas_by_boro)\n\n# A tibble: 5 √ó 2\n  BORO          DBA_Count\n  <chr>             <int>\n1 Bronx              1141\n2 Brooklyn           3964\n3 Manhattan          5404\n4 Queens             3404\n5 Staten Island       577"
  },
  {
    "objectID": "project.html#proportion-of-c-grade-dba-in-each-boro",
    "href": "project.html#proportion-of-c-grade-dba-in-each-boro",
    "title": "DANL Project",
    "section": "2.14 Proportion of C GRADE DBA in each BORO",
    "text": "2.14 Proportion of C GRADE DBA in each BORO\n\nfiltered_data <- restaurant %>%\n  select(BORO, DBA)\nfiltered_data$BORO[is.na(filtered_data$BORO)] <- 0\ntotal_dbas_by_boro <- filtered_data %>%\n  group_by(BORO) %>%\n  summarise(DBA_Count = n_distinct(DBA), .groups = 'drop')\nprint(total_dbas_by_boro)\n\n# A tibble: 5 √ó 2\n  BORO          DBA_Count\n  <chr>             <int>\n1 Bronx              1141\n2 Brooklyn           3964\n3 Manhattan          5404\n4 Queens             3404\n5 Staten Island       577\n\n25 / 1141 * 100\n\n[1] 2.19106\n\n84 / 3964 * 100\n\n[1] 2.119072\n\n97 / 5404 * 100\n\n[1] 1.794967\n\n83 / 3404 * 100\n\n[1] 2.438308\n\n5 / 577 * 100\n\n[1] 0.8665511"
  },
  {
    "objectID": "project.html#analysis-4",
    "href": "project.html#analysis-4",
    "title": "DANL Project",
    "section": "2.15 Analysis",
    "text": "2.15 Analysis"
  },
  {
    "objectID": "project.html#average-score-of-top-5-dba-in-each-boro",
    "href": "project.html#average-score-of-top-5-dba-in-each-boro",
    "title": "DANL Project",
    "section": "2.17 Average SCORE of Top 5 DBA in each BORO",
    "text": "2.17 Average SCORE of Top 5 DBA in each BORO\n\n(49 + 47 + 46 + 45 + 44)/5\n\n[1] 46.2\n\n(66 + 62 + 62 + 61 + 59)/5\n\n[1] 62\n\n(71 + 65 + 61 + 60 + 59)/5\n\n[1] 63.2\n\n(86 + 67 + 65 + 58 + 57)/5\n\n[1] 66.6\n\n(38 + 32.5 + 31 + 30 + 28)/5\n\n[1] 31.9"
  },
  {
    "objectID": "project.html#analysis-5",
    "href": "project.html#analysis-5",
    "title": "DANL Project",
    "section": "2.18 Analysis",
    "text": "2.18 Analysis"
  }
]